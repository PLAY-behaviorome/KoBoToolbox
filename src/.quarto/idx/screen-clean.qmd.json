{"title":"Clean","markdown":{"headingText":"Clean","containsRefs":false,"markdown":"\n### Setup {-}\n\nWe source a set of cleaning functions have the `screen_` prefix.\n\n```{r}\npurrr::walk(list.files(file.path(here::here(), \"R\"), \n                    \"^screen_\", full.names = TRUE), source)\n```\n\nThere are three CSV files to clean:\n\n```{r}\n(fn <- list.files(\"../data/csv/screening\", \"[Dd]emographic\", full.names = TRUE))\n```\n\nWe clean them separately, as needed, then merge them.\n\n### Clean variable names {-}\n\n```{r read-screening-csvs}\ndf1 <-\n  readr::read_csv(fn[1],\n                  col_types = readr::cols(.default = 'c'),\n                  show_col_types = FALSE)\ndf2 <-\n  readr::read_csv(fn[2],\n                  col_types = readr::cols(.default = 'c'),\n                  show_col_types = FALSE)\ndf3 <-\n  readr::read_csv(fn[3],\n                  col_types = readr::cols(.default = 'c'),\n                  show_col_types = FALSE)\n```\n\n```{r}\nhead(names(df1), 15)\n```\n\n```{r}\nhead(names(df2), 15)\n```\n\n```{r}\nhead(names(df3), 15)\n```\n\n```{r}\nhead(names(df1), 15)\n```\n\n```{r}\nhead(names(df2), 15)\n```\n\n```{r}\nhead(names(df3), 15)\n```\n\n<!-- There are a separate set of variable-by-variable cleaning functions in `R/screen_clean_utils.R`. -->\n\nWe remove the unneeded 'play_demo_*' and 'play_phone_questionnaire_' variable headers using `screen_remove_variable_headers()`.\n\nWe next add Census FIPS codes for the home state and county so that we can link with county-level Census data at a later date.\nThis depends on address, city, and state information.\n\n::: {.callout-note}\nThe Census queries stopped working around 2023-06-16, but should be restored as of 2024-09-13, using `R/screen_add_fips.R`.\n\nIt would be more efficient to query the Census geocoding database once.\n:::\n\nWe have name and address information in the screening data (e.g., '..parent_phone', '..parent_email', etc.).\nWe remove this and other identifiable information using `screen_remove_identifiers()`.\n\nWe remove fields that contain administrative metadata with `screen_remove_metadata_fields()`.\n\nWe remove fields used only by staff in uploading data to Databrary using `screen_remove_databrary_fields()`.\n\nThen, we use `dplyr::full_join()` to combine the set of individually \ncleaned data files.\nThe `screen_clean_raw_csv()` function combines the previous `screen_remove*` functions.\nThe `screen_clean_raw_join()` function cleans each CSV then joins them.\n\n```{r clean-screening-join}\n(scr_df <- screen_clean_raw_join())\n```\n\n### Clean individual fields {-}\n\nNow, we can proceed to clean-up the merged data frame.\nThe sequence of functions called below cleans 'construct-specific' variables\nas indicated by the function names.\n\n```{r show-screening-field-cleaning, eval=FALSE}\nscr_df <- scr_df |> \n    screen_clean_child_info() |>\n    screen_clean_lang_info() |>\n    screen_clean_mom_info() |>\n    screen_clean_biodad_father_info() |>\n    screen_clean_childcare_info() |>\n    screen_clean_family_structure() |>\n    screen_clean_play_id() |>\n    screen_remove_selected_cols() |>\n    screen_select_reorder_cols()\n```\n\nFor convenience, we package this sequence in its own function, `screen_clean_fields()`.\n\n::: {.callout-note}\n\nNote that all of the variables are considered character strings. The `tidyverse`\nsuite does a great job of guessing what variables are what, but sometimes it\nguesses wrongly. So, in preliminary stages, it has proved easier to make everything\na character string.\n\n:::\n\n```{r clean-merged-screen-fields}\nscr_df <- screen_clean_fields(scr_df)\nstr(scr_df)\n```\n\nThere is more work to do, but we have a version worth exporting.\n\n## Merge {-}\n\nLet's add the Databrary volume ID info.\n\n```{r add-db-vol-id}\nscr_df <- scr_df |>\n  screen_add_db_vol_id()\n```\n\nThen filter out rows that do not have valid volume IDs.\n\n```{r filter-invalid-db-vol-ids}\nvalid_db_vol <- !is.na(scr_df$vol_id)\n\nscr_df <- scr_df[valid_db_vol,]\n```\n\nThere are *n=*`{r} sum(valid_db_vol)` valid Databrary volume IDs out of a total of *n*=`r length(valid_db_vol)` screening records.\n\nNext, we add a `play_status` field based on the `group-name` field from Databrary.\nWe use `group-name` for indicating \"Gold\", \"Silver\", or \"Not run.\"\n\nTwo targets in `_targets.R` are relevant for this operation:\n\n```\n  tar_target(\n    play_vols_df,\n    readr::read_csv(\"data/csv/_meta/play_site_vols.csv\",\n                    show_col_types = FALSE)\n  ),\n  tar_target(\n    databrary_session_csvs,\n    purrr::map(play_vols_df$site_id, databrary_get_save_session_csv),\n    cue = tarchetypes::tar_cue_age(\n      name = databrary_session_csvs,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  )\n\n```\n\nThese targets generate site-specific CSVs in `data/csv/site_sessions` based on the database of PLAY sites contained in `data/csv/_meta/play_site_vols.csv`.\nWe load these CSVs into a single data frame.\n\n### Load site session data {-}\n\n```{r add-db-status}\nsession_fns <-\n  list.files(\"../data/csv/site_sessions\", \"\\\\.csv$\", full.names = TRUE)\n\ndf_sessions <-\n  purrr::map(\n    session_fns,\n    readr::read_csv,\n    col_types = readr::cols(.default = 'c'),\n    show_col_types = FALSE\n  ) |>\n  purrr::list_rbind()\n```\n\nThe `group_name` variable contains status information about the sessions.\n\n```{r}\nxtabs(~ group_name, data=df_sessions)\n```\n\nWe note that there are three different versions of no visit: \"No visit\", \"No_visit\", and \"No_Visit\". \nIn addition, there are *n*=`r sum(is.na(df_sessions$group_name))` sessions with NA in the `group_name`.\n\nLet's modify those values that specify no visit on one of these forms to conform with one another.\n\n```{r}\ndf_sessions <- df_sessions |>\n  dplyr::mutate(group_name = stringr::str_replace(group_name, \"No.*isit\", \"No_visit\"))\n```\n\nThese could be sessions that are still in QA or which are scheduled, or there could be some other anomaly.\nHere, we want to select only those sessions that occurred and which have passed QA--those sessions for which `group_name` is either 'PLAY_Gold' or 'PLAY_Silver'.\n\n```{r}\ndf_sessions <- df_sessions |>\n  dplyr::filter(stringr::str_detect(group_name, \"PLAY_\"))\n```\n\n### Sharing by session status {-}\n\nHere is information about the sharing status.\n\n```{r}\nxtabs(~ group_name + session_release, df_sessions)\n```\n\nThere was one session marked `PRIVATE`.\n\n```{r}\ndf_sessions |>\n  dplyr::filter(session_release == \"PRIVATE\") |>\n  dplyr::select(vol_id, session_id, session_name, group_name)\n```\n\nNow, we join the screening data with the Databrary session data.\n\n```{r}\nscreen_datab_df <- dplyr::left_join(df_sessions, scr_df, by = c('vol_id', 'participant_ID'))\n```\n\nLet's do some additional cleaning of redundant column names, e.g., exclusion.\n\n```{r}\nscreen_datab_df <- screen_datab_df |>\n  tidyr::unite(exclusion_reason, c(\"exclusion1_reason\", \"exclusion2_reason\", \"exclusion_reason\")) |>\n  dplyr::mutate(exclusion_reason = stringr::str_remove_all(exclusion_reason, \"NA|_\"))\n```\n\n## Export cleaned file {-}\n\nWe date-stamp the exported file so we can monitor progress as this workflow develops.\n\n```{r export-screen}\nsfn <- paste0(\"PLAY-screening-datab-\", Sys.Date(), \".csv\")\nreadr::write_csv(screen_datab_df, file.path(here::here(), \"data/csv/screening/agg/\", sfn))\n```\n\nWe also save a copy with \"latest\".\n\n```{r export-latest}\nsfn <- \"PLAY-screening-datab-latest.csv\"\nreadr::write_csv(screen_datab_df, file.path(here::here(), \"data/csv/screening/agg/\", sfn))\n```\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["include/css/style.css"],"number-sections":false,"toc":true,"toc-depth":3,"output-file":"screen-clean.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.40","editor":"source","theme":"default","csl":"include/bib/apa.csl","bibliography":["include/bib/book.bib","include/bib/packages.bib"],"citations-hover":true,"date-modified":"last-modified","lightbox":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}