{
  "hash": "2c546c2b77ee62ddf816703c6a74c5d0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"\"\n---\n\n\n\n\nThis section describes the background about the setup procedure.\n\n## Authentication {-}\n\nThe data are stored in an account on <https://kf.kobotoolbox.org>. \nThe login credentials for that account are shared among the PLAY Project staff. \nTo access the site's API programmatically, an API key was downloaded and added to the local `~/.Renviron` file.\n\n::: {.callout-important}\n\nThe KoBoToolBox API key is **not** synched to GitHub.\n\n:::\n\n## Set-up {-}\n\nTo test whether the local system has the API key installed, we can run the command `Sys.getenv(\"KOBO_API_KEY\")`. \n\n### Check KoBo API Key {-}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkb_api <- Sys.getenv(\"KOBO_API_KEY\")\nif ((length(kb_api) != 1) || (!is.character(kb_api))) {\n  stop(\"'KOBO_API_KEY' not installed in .Renviron\")\n} else {\n  message(\"'KOBO_API_KEY' installed.\")\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n'KOBO_API_KEY' installed.\n```\n\n\n:::\n:::\n\n\n\n\n### Databrary credentials {-}\n\nThe [`databraryr`](https://databrary.github.io/databraryr) package handles authenticating to Databrary.\nFor scripting access to Databrary that require authentication, it is useful to store the user's Databrary login (email) in `.Renviron` using the R command `Sys.setenv(DATABRARY_LOGIN = \"<email@provider.com>\")` where you substitute your Databrary login (email) for `<email@provider.com>`.\n\nHere, we check that `.Renviron` contains `DATABRARY_LOGIN`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndb_api <- Sys.getenv(\"DATABRARY_LOGIN\")\nif ((length(kb_api) != 1) || (!is.character(db_api))) {\n  stop(\"'DATABRARY_LOGIN' not installed in .Renviron\")\n} else {\n  message(\"'DATABRARY_LOGIN' installed.\")\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n'DATABRARY_LOGIN' installed.\n```\n\n\n:::\n:::\n\n\n\n\n### Install dependencies {-}\n\nWe use the [`renv`](https://cran.r-project.org/web/packages/renv/index.html) package to manage package dependencies.\n\n### Load/source helper functions {-}\n\nMost of the work is contained in functions located in `R/`.\nThe functions in this directory are sourced when `tar_make()` from the `{targets}` package is sourced.\n\n::: {.callout-note}\n\nThe `update_report_render.R` function handles updating all data targets and rendering the report.\nSo, the typical workflow to update the report is as follows;\n\n```r\nsource(\"R/update_report_render.R\")\nupdate_report_render()\n```\n\n:::\n\n::: {.callout-important}\nNone of the data outputs are synched to GitHub.\n\nWe have `.gitignore` files in the `data/` directories and subdirectories that keep all data out of the version control database.\n\n:::\n\n## Approach\n\nTo make the workflow more robust and reproducible, much of the work is embedded in functions and extensive use is made of the [`{targets}`](https://cran.r-project.org/web/packages/targets/) package mentioned previously. \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}