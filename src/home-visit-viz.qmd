# Home visit: Visualizations

## Setup

```{r}
library(tidyverse)
source("../R/mcdi_viz_wordcloud.R")
```

## Demographics {-}

```{r}
if (!('home_visit_df' %in% ls())) {
  targets::tar_load(home_visit_df, store="../_targets")
}
```

### Child age {-}

Child age in months (`age_group`) by `child_sex`.

Note: The child's exact age in months is part of the Databrary-related data. 
That is on the work plan.

```{r filter-home-visit}
home_visit_filtered <- home_visit_df |>
  dplyr::filter(!is.na(age_group),
                !is.na(child_sex))
```

```{r}
xtabs(formula = ~ age_group + child_sex, 
      data = home_visit_filtered)
```

A total of $n=$ `r dim(home_visit_filtered)[1]` mother-infant dyads have been tested.
This includes training and pilot visits.

```{r fig-age-grp-by-sex, fig.cap="Participants by age group and sex"}
home_visit_filtered |>
  ggplot() +
  aes(age_group, fill = child_sex) +
  geom_bar() +
  theme(legend.position = "bottom") +
  theme(legend.title = element_blank())
```

### Time series {-}

To calculate cumulative visits, we have to add an index variable

```{r}
df <- home_visit_filtered |>
  dplyr::select(test_date, site_id) |>
  dplyr::mutate(test_date = as.Date(test_date)) |>
  dplyr::arrange(test_date) |>
  dplyr::mutate(n_visits = seq_along(test_date))
```

```{r fig-home-visit-time-series, fig.cap="Cumulative home visits by year"}
df |>
  dplyr::filter(!is.na(test_date),
                !is.na(n_visits),
                !is.na(site_id)) |>
  ggplot() +
  aes(test_date, n_visits) +
  geom_point()
```

```{r}
if (!('home_visit_df' %in% ls())) {
  targets::tar_load(home_visit_df, store="../_targets")
}

library(wordcloud)
library(RColorBrewer)
```

## Language exposure {-}

```{r clean-lang-df}
df <- home_visit_df |>
  dplyr::mutate(language_child = stringr::str_replace_all(language_child, " ", "_"))
xtabs(formula = ~ child_sex + language_child, data = df)
```

## MB-CDI {-}

### 12-mo-old English speakers {-}

```{r}
eng_12 <-
  readr::read_csv(
    "../data/csv/home_visit/agg/mcdi_english_12_combined.csv",
    col_types = readr::cols(.default = 'c'),
    show_col_types = FALSE
  )
```

There are $n=$ `r (n_12_eng <- dim(eng_12)[1])` participant records.

```{r mcdi-12-english}
eng_12_long <- eng_12 |>
  tidyr::pivot_longer(cols = !(play_id | site_id | subject_number),
                        names_to = "word",
                        values_to = "understands_or_says")

#xtabs(~ word + understands_or_says, eng_12_long)
```

```{r}
word_ct <- eng_12_long |>
  dplyr::filter(!is.na(understands_or_says)) |>
  dplyr::filter(understands_or_says == "understands") |>
  dplyr::count(word, sort = TRUE)

quant_25 <- round(n_12_eng*.25, 0)
```

```{r 12-eng-wordcloud}
# rcb_color_paired <- RColorBrewer::brewer.pal(12, 'Paired')
# wordcloud::wordcloud(words = word_ct$word, freq = word_ct$n, min.freq = quant_25, colors = rcb_color_paired)

mcdi_viz_wordcloud(word_ct, n_participants = dim(eng_12)[1], quantile = .40)
```

### 18-mo-old English speakers {-}

```{r}
eng_18 <-
  readr::read_csv(
    "../data/csv/home_visit/agg/mcdi_english_18_combined.csv",
    col_types = readr::cols(.default = 'c'),
    show_col_types = FALSE
  )

```

There are $n=$ `r (n_18_eng <- dim(eng_18)[1])` participant records.

```{r}
word_ct <- eng_18 |>
  tidyr::pivot_longer(cols = !(play_id | site_id | subject_number),
                        names_to = "word",
                        values_to = "says") |>
  dplyr::filter(!is.na(says)) |>
  dplyr::filter(says == TRUE) |>
  dplyr::count(word, sort = TRUE)

quant_25 <- round(n_18_eng*.25, 0)
```

```{r 18-eng-wordcloud}
#wordcloud::wordcloud(words = word_ct$word, freq = word_ct$n, min.freq = quant_25, colors = rcb_color_paired)
mcdi_viz_wordcloud(word_ct, n_participants = dim(eng_18)[1], quantile = .50)
```

### 24-mo-old English speakers {-}

```{r}
eng_24 <-
  readr::read_csv(
    "../data/csv/home_visit/agg/mcdi_english_24_combined.csv",
    col_types = readr::cols(.default = 'c'),
    show_col_types = FALSE
  )
```

There are $n=$ `r dim(eng_24)[1]` participant records.

```{r mcdi-24-english}
word_ct <- eng_24 |>
  tidyr::pivot_longer(cols = !(play_id | site_id | subject_number),
                        names_to = "word",
                        values_to = "says") |>
  dplyr::filter(!is.na(says)) |>
  dplyr::filter(says == TRUE) |>
  dplyr::count(word, sort = TRUE)
```

```{r mcdi-24-eng-word-cloud}
mcdi_viz_wordcloud(word_ct, n_participants = dim(eng_24)[1], quantile = .60)
```

```{r mcdi-24-eng-rare-words-cloud}
rare_word_ct <- word_ct |>
  dplyr::filter(n < dim(eng_24)[1]*.25)
# 
# wordcloud::wordcloud(words = rare_word_ct$word, freq = rare_word_ct$n)
mcdi_viz_wordcloud(rare_word_ct, n_participants = dim(eng_24)[1], quantile = .25)
```

```{r}
if (!('home_visit_df' %in% ls())) {
  targets::tar_load(home_visit_df, store="../_targets")
}
```

## Locomotion

### Select & Summarize {-}

```{r make-loco-df}
play_loco <- home_visit_df |>
  dplyr::select(
    age_group,
    child_sex,
    language_child,
    site_id,
    subject_number,
    locomotor_milestones.who_walk.who_walk_onset_mo,
    locomotor_milestones.k_walk.k_walk_onset_mo,
    locomotor_milestones.crawl_onset.crawl_onset_mo
  ) |>
  dplyr::rename(
    walk_mos_who = locomotor_milestones.who_walk.who_walk_onset_mo,
    walk_mos_kea = locomotor_milestones.k_walk.k_walk_onset_mo,
    crawl_mos = locomotor_milestones.crawl_onset.crawl_onset_mo
  ) |>
  dplyr::mutate(
    walk_mos_who = as.numeric(walk_mos_who),
    walk_mos_kea = as.numeric(walk_mos_kea),
    crawl_mos = as.numeric(crawl_mos)
  )
```

```{r}
xtabs(formula = ~ child_sex + age_group, data = play_loco)
```

### Check for anomalous values {-}

```{r}
crawl_mos_min <- 4
walk_mos_min <- 6
```

#### Anomalous crawling onset {-}

```{r}
play_loco |>
  dplyr::select(site_id, subject_number, crawl_mos) |>
  dplyr::filter(crawl_mos < crawl_mos_min) |>
  knitr::kable(format = 'html') 
```

#### Anomalous walking onset (KEA criteria) {-}

```{r}
play_loco |>
  dplyr::select(site_id, subject_number, walk_mos_kea) |>
  dplyr::filter(walk_mos_kea < walk_mos_min) |>
  knitr::kable(format = 'html') 
```

#### Anomalous walking onset (WHO criteria) {-}

```{r}
play_loco |>
  dplyr::select(site_id, subject_number, walk_mos_who) |>
  dplyr::filter(walk_mos_who < walk_mos_min) |>
  knitr::kable(format = 'html') 
```

### Crawl onset {-}

```{r fig-crawl-onset-hist, fig.cap="Age of crawling onset (mos) by sex"}
play_loco |>
  dplyr::filter(crawl_mos > crawl_mos_min, !is.na(crawl_mos)) |>
  ggplot() +
  aes(crawl_mos, fill = child_sex) +
  geom_histogram(bins = 12) +
  theme(legend.position = "bottom") +
  theme(legend.title = element_blank())
```

### Walk onset {-}

```{r fig-walk-mos-kea, fig.cap="Age (mos) of walking onset (KEA criteria) by sex"}
play_loco |>
  dplyr::filter(walk_mos_kea > walk_mos_min, !is.na(walk_mos_kea)) |>
  ggplot() +
  aes(walk_mos_kea, fill = child_sex) +
  theme(legend.position="bottom") +
  geom_histogram(bins = 10)
```

```{r fig-walk-mos-who, fig.cap="Age (mos) of walking onset (WHO criteria) by sex"}
play_loco |>
  dplyr::filter(walk_mos_who > walk_mos_min, !is.na(walk_mos_who)) |>
  ggplot() +
  aes(walk_mos_who, fill = child_sex) +
  geom_histogram(bins=12) +
  theme(legend.position="bottom") +
  theme(legend.title = element_blank())
```

```{r fig-walk-mos-kea-who, fig.cap="Walking onset by WHO vs. KEA criteria"}
play_loco |>
  dplyr::filter(walk_mos_who > walk_mos_min, !is.na(walk_mos_who), 
                walk_mos_kea > walk_mos_min, !is.na(walk_mos_kea)) |>
  ggplot() +
  aes(walk_mos_who, walk_mos_kea, color = child_sex) +
  geom_point() +
  geom_smooth(method = "lm") +
  xlim(8, 18) +
  ylim(8, 18) +
  theme(legend.position = "bottom") +
  theme(aspect.ratio = 1) +
  theme(legend.title = element_blank()) -> walk_p

ggExtra::ggMarginal(
  walk_p,
  play_loco,
  walk_mos_who,
  walk_mos_kea,
  type = "density",
  margins = "both",
  groupColour = TRUE,
  groupFill = TRUE
)
```

```{r fig-walk-mos-kea-crawl-mos, fig.cap="Walking onset vs. Crawling"}
play_loco |>
  dplyr::filter(crawl_mos > crawl_mos_min, !is.na(crawl_mos), 
                walk_mos_kea > walk_mos_min, !is.na(walk_mos_kea)) |>
  ggplot() +
  aes(crawl_mos, walk_mos_kea, color = child_sex) +
  geom_point() +
  geom_smooth(method = "lm") +
  theme(legend.position = "bottom") +
  theme(aspect.ratio = 1) +
  theme(legend.title = element_blank()) -> walk_p

ggExtra::ggMarginal(
  walk_p,
  play_loco,
  walk_mos_who,
  walk_mos_kea,
  type = "density",
  margins = "both",
  groupColour = TRUE,
  groupFill = TRUE
)
```

## Health visualizations {-}

```{r health-load-home-visit-df}
# Load home_visit_df if not in environment
if (!("health_df" %in% ls())) {
 targets::tar_load(health_df, store="../_targets") 
}
```

### Feeding {-}

```{r}
xtabs(formula = ~ age_group + feeding_breastfeed, data = health_df)
```

```{r fig-solid-food-mos, fig.cap="Age at introduction of solid foods"}
health_df %>%
  dplyr::select(child_sex, feeding_solidfood_age) |>
  dplyr::filter(feeding_solidfood_age < 12) |>
  ggplot() +
  aes(x = feeding_solidfood_age, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 14) +
  theme(legend.title = element_blank())
```

Clearly, there are some impossible values here.

```{r anomalous-feeding}
health_df |>
  dplyr::select(participant_id, 
                feeding_solidfood_age) |>
  dplyr::filter(feeding_solidfood_age > 12 | feeding_solidfood_age < 3) %>%
  knitr::kable(format = 'html')
```

A preliminary look at `feeding_comments_feeding` shows that there are some names mentioned.

::: {.rmdnote}

We should consider flagging these in the QA process.

:::

### Sleeping position {-}

These data only focus on `child_sleeping_position`.
Other sleeping data are in the screening questionnaire.

```{r}
sleeping_pos <- health_df |>
  dplyr::select(child_sex, age_group, 
                child_sleeping_position) |>
  dplyr::filter(!is.na(child_sleeping_position))

xtabs(formula = ~ child_sleeping_position + age_group, data = sleeping_pos)
```

### Smoking/drinking {-}

```{r tab-smoking-drinking}
smoking_drinking <- health_df |>
  dplyr::select(age_group,
    child_sex,
    contains("smoking"),
    contains("drinking")
  )

xtabs(formula = ~ pregnant_smoking + pregnant_drinking, smoking_drinking)
```

```{r tab-smoking-house-car}
xtabs(formula = ~ smoking_house + smoking_car, smoking_drinking)
```

```{r tab-comments-smoking}
smoking_drinking |>
  dplyr::select(comments_smoking) |>
  dplyr::filter(!is.na(comments_smoking)) |>
  knitr::kable(format = 'html')
```

```{r tab-comments-drinking}
smoking_drinking |>
  dplyr::select(comments_drinking) |>
  dplyr::filter(!is.na(comments_drinking)) |>
  knitr::kable(format = 'html')
```

### Patient Health Questionnaire (PHQ-4) {-}

```{r fig-phq4, fig.cap="PHQ4 responses by age group and child sex"}
phq4 <- health_df |>
  dplyr::select(child_sex, age_group, contains("phq4_"))

names(phq4) <- gsub(pattern = "phq4_", 
                    replacement = "",
                    names(phq4))

phq4 |>
  tidyr::pivot_longer(!c('child_sex', 'age_group'), 
                      names_to = "question", 
                      values_to = "response") |>
  dplyr::filter(!is.na(response)) |>
  dplyr::mutate(response = factor(response,
                                  c("notatall",
                                    "severaldays",
                                    "morethanhalf",
                                    "nearly")),
                ordered = TRUE) |>
  ggplot() +
  aes(x = response, fill = child_sex) +
  geom_bar() +
  facet_grid(cols = vars(question), rows = vars(age_group)) +
  scale_x_discrete(guide = guide_axis(angle = 90)) +
  xlab("") +
  theme(legend.position = "bottom", legend.title = element_blank())
```

### Child health {-}

#### Overall rating  {-}

```{r tab-child-health-rating}
child_health_rating <- health_df |>
  dplyr::select(child_sex, age_group, child_health) |>
  dplyr::filter(!is.na(child_health)) |>
  dplyr::mutate(child_health = factor(child_health,
                                      c("poor",
                                        "fair",
                                        "good",
                                        "verygood",
                                        "excellent",
                                        "donotknow",
                                        "refused"),
                                      ordered = TRUE))

xtabs(formula = ~ child_health + age_group, data = child_health_rating)
```

#### Recent vaccination {-}

```{r}
recent_vax <- health_df |>
  dplyr::select(child_sex, age_group, child_vaccination) |>
  dplyr::filter(!is.na(child_vaccination))

xtabs(formula = ~ child_vaccination + age_group, data = recent_vax)
```

#### Seen medical specialist {-}

```{r}
seen_specialist <- health_df |>
  dplyr::select(child_sex, age_group, child_medical_specialist) |>
  dplyr::filter(!is.na(child_medical_specialist))

xtabs(formula = ~ child_medical_specialist + age_group, data = seen_specialist)
```

::: {.callout-warning}
Manual inspection shows some possible identifying information (names) in the comments.
:::

#### Illnesses and allergies {-}

```{r fig-illness-allergies}
illness_allergy <- health_df |>
  dplyr::select(child_sex, age_group, contains("illness_"))


names(illness_allergy) <- gsub(pattern = "illness_",
                               replacement = "",
                               names(illness_allergy))

illness_allergy |>
  tidyr::pivot_longer(!c('child_sex', 'age_group'),
                      names_to = "type",
                      values_to = "response") |>
  dplyr::filter(!is.na(response)) |>
  dplyr::mutate(response = factor(response,
                                  c("no", "yes", "donotknow", "refused"))) |>
  ggplot() +
  aes(x = response, fill = child_sex) +
  geom_bar() +
  facet_grid(cols = vars(type), rows = vars(age_group)) +
  scale_x_discrete(guide = guide_axis(angle = 90)) +
  xlab("") +
  theme(legend.position = "bottom", legend.title = element_blank())
```

## Temperament visualizations {-}

This page provides visualizations of the Early Childhood Behavior Questionnaire (ECBQ) data related to child temperament.

### Setup {-}

As of 2023-09-21, this workflow uses a separate set of functions specifically designed to extract ECBQ data from the raw KoBoToolbox files for *English-speaking families only*.

The functions are found in `R/` with the prefix `ecbq_`.

We create a "wide" data frame `ecbq_wide_df` as one of the targets of `targets:tar_make()`.
We attempt to load that here and ensure that all `R/ecbq_` functions are in the local environment.

```{r}
if (!('ecbq_wide_df' %in% ls())) {
  targets::tar_load(ecbq_wide_df, store="../_targets")
}

if (!('ecbq_plot_all' %in% ls())) {
  ecbq_fl <- list.files("../R", "^ecbq_", full.names = TRUE)
  purrr::walk(ecbq_fl, source)
}
```

### Summarize {-}

```{r}
ecbq_complete <- ecbq_wide_df |>
  tidyr::complete()

str(ecbq_complete)
```

```{r tab-ecbq-age-by-sex-cases}
xtabs(formula = ~ age_group + child_sex, ecbq_complete)
```

### Visualize {-}

```{r}
ecbq_vars <- names(ecbq_complete)[stringr::str_detect(names(ecbq_complete),"rothbart_")]

# Omit comments
ecbq_vars <- ecbq_vars[!stringr::str_detect(ecbq_vars, "comments")]
```

We use `purrr::map()` to plot all of the responses to individual ECBQ items.

```{r purrr-map-ecbq-figs}
purrr::map(ecbq_vars, suppressMessages(ecbq_plot), df = ecbq_complete)
```

#### Comments {-}

Manual inspection shows that the comments field has some names.
We omit printing the comments here until we can be assured that there is no identifiying information in the comments.

```{r ecbq-comments, eval=FALSE}
ecbq_complete |>
  dplyr::select(participant_id, age_group, rothbart_comments) |>
  dplyr::filter(!is.na(rothbart_comments)) |>
  dplyr::arrange(age_group) |>
  knitr::kable(format = 'html')
```
