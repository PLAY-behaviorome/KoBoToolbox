# Home visit: Visualizations

## Background

This page shows some simple visualizations of the cleaned aggregate data file.

## Setup

Load dependencies.

```{r}
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(wordcloud))
suppressPackageStartupMessages(library(RColorBrewer))

source("../R/mcdi_viz_wordcloud.R")
source("../R/ecbq_plot.R")
```

Load saved "latest" data file.

```{r}
hv <- readr::read_csv("../data/csv/home_visit/agg/PLAY-non-mcdi-latest.csv", show_col_types = FALSE)
```

### Child age {-}

Child age in months (`age_group`) by `child_sex`.

Note: The child's exact age in months is part of the Databrary-related data. 
That is on the work plan.

```{r filter-home-visit}
home_visit_filtered <- hv |>
  dplyr::filter(!is.na(age_group),
                !is.na(child_sex))
```

```{r}
xtabs(formula = ~ age_group + child_sex, 
      data = home_visit_filtered)
```

A total of $n=$ `r dim(home_visit_filtered)[1]` mother-infant dyads have been tested.
This includes training and pilot visits.

```{r}
#| label: fig-age-grp-by-sex
#| fig-cap: Participants by age group and sex
home_visit_filtered |>
  ggplot() +
  aes(age_group, fill = child_sex) +
  geom_bar() +
  theme(legend.position = "bottom") +
  theme(legend.title = element_blank())
```

### Time series {-}

To calculate cumulative visits, we have to add an index variable

```{r}
df <- home_visit_filtered |>
  dplyr::select(test_date, site_id) |>
  dplyr::mutate(test_date = as.Date(test_date)) |>
  dplyr::arrange(test_date) |>
  dplyr::mutate(n_visits = seq_along(test_date))
```

```{r}
#| label: fig-home-visit-time-series
#| fig-cap: "Cumulative home visits by year"
df |>
  dplyr::filter(!is.na(test_date),
                !is.na(n_visits),
                !is.na(site_id)) |>
  ggplot() +
  aes(test_date, n_visits) +
  geom_point()
```

## Language exposure {-}

```{r clean-lang-df}
df <- hv |>
  dplyr::mutate(language_child = stringr::str_replace_all(language_child, " ", "_"))
xtabs(formula = ~ child_sex + language_child, data = df)
```
## MB-CDI {-}

### 12-mo-old English speakers {-}

```{r}
eng_12 <-
  readr::read_csv(
    "../data/csv/home_visit/agg/mcdi_english_12_combined.csv",
    col_types = readr::cols(.default = 'c'),
    show_col_types = FALSE
  )
```

There are $n=$ `r (n_12_eng <- dim(eng_12)[1])` participant records.

```{r mcdi-12-english}
eng_12_long <- eng_12 |>
  tidyr::pivot_longer(cols = !(play_id | site_id | subject_number),
                        names_to = "word",
                        values_to = "understands_or_says")

#xtabs(~ word + understands_or_says, eng_12_long)
```

```{r}
word_ct <- eng_12_long |>
  dplyr::filter(!is.na(understands_or_says)) |>
  dplyr::filter(understands_or_says == "understands") |>
  dplyr::count(word, sort = TRUE)

quant_25 <- round(n_12_eng*.25, 0)
```

```{r 12-eng-wordcloud}
# rcb_color_paired <- RColorBrewer::brewer.pal(12, 'Paired')
# wordcloud::wordcloud(words = word_ct$word, freq = word_ct$n, min.freq = quant_25, colors = rcb_color_paired)

mcdi_viz_wordcloud(word_ct, n_participants = dim(eng_12)[1], quantile = .40)
```

### 18-mo-old English speakers {-}

```{r}
eng_18 <-
  readr::read_csv(
    "../data/csv/home_visit/agg/mcdi_english_18_combined.csv",
    col_types = readr::cols(.default = 'c'),
    show_col_types = FALSE
  )

```

There are $n=$ `r (n_18_eng <- dim(eng_18)[1])` participant records.

```{r}
word_ct <- eng_18 |>
  tidyr::pivot_longer(cols = !(play_id | site_id | subject_number),
                        names_to = "word",
                        values_to = "says") |>
  dplyr::filter(!is.na(says)) |>
  dplyr::filter(says == TRUE) |>
  dplyr::count(word, sort = TRUE)

quant_25 <- round(n_18_eng*.25, 0)
```

```{r 18-eng-wordcloud}
#wordcloud::wordcloud(words = word_ct$word, freq = word_ct$n, min.freq = quant_25, colors = rcb_color_paired)
mcdi_viz_wordcloud(word_ct, n_participants = dim(eng_18)[1], quantile = .50)
```

### 24-mo-old English speakers {-}

```{r}
eng_24 <-
  readr::read_csv(
    "../data/csv/home_visit/agg/mcdi_english_24_combined.csv",
    col_types = readr::cols(.default = 'c'),
    show_col_types = FALSE
  )
```

There are $n=$ `r dim(eng_24)[1]` participant records.

```{r mcdi-24-english}
word_ct <- eng_24 |>
  tidyr::pivot_longer(cols = !(play_id | site_id | subject_number),
                        names_to = "word",
                        values_to = "says") |>
  dplyr::filter(!is.na(says)) |>
  dplyr::filter(says == TRUE) |>
  dplyr::count(word, sort = TRUE)
```

```{r mcdi-24-eng-word-cloud}
mcdi_viz_wordcloud(word_ct, n_participants = dim(eng_24)[1], quantile = .60)
```

```{r mcdi-24-eng-rare-words-cloud}
rare_word_ct <- word_ct |>
  dplyr::filter(n < dim(eng_24)[1]*.25)
# 
# wordcloud::wordcloud(words = rare_word_ct$word, freq = rare_word_ct$n)
mcdi_viz_wordcloud(rare_word_ct, n_participants = dim(eng_24)[1], quantile = .25)
```

```{r}
if (!('home_visit_df' %in% ls())) {
  targets::tar_load(home_visit_df, store="../_targets")
}
```

## Locomotion

### Check for anomalous values {-}

```{r}
crawl_mos_min <- 4
walk_mos_min <- 6
```

#### Anomalous crawling onset {-}

```{r}
hv |>
  dplyr::select(site_id, subject_number, crawl_mos) |>
  dplyr::filter(crawl_mos < crawl_mos_min) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

#### Anomalous walking onset (KEA criteria) {-}

```{r}
hv |>
  dplyr::select(site_id, subject_number, walk_mos_kea) |>
  dplyr::filter(walk_mos_kea < walk_mos_min) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

#### Anomalous walking onset (WHO criteria) {-}

```{r}
hv |>
  dplyr::select(site_id, subject_number, walk_mos_who) |>
  dplyr::filter(walk_mos_who < walk_mos_min) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

### Crawl onset {-}

```{r , fig.cap="Age of crawling onset (mos) by sex"}
#| label: fig-crawl-onset-hist
#| fig-cap: "Age of crawling onset (mos) by sex"
hv |>
  dplyr::filter(crawl_mos > crawl_mos_min, !is.na(crawl_mos)) |>
  ggplot() +
  aes(crawl_mos, fill = child_sex) +
  geom_histogram(bins = 12) +
  theme(legend.position = "bottom") +
  theme(legend.title = element_blank())
```

### Walk onset {-}

```{r}
#| label: fig-walk-mos-kea
#| fig-cap: "Age (mos) of walking onset (KEA criteria) by sex"
hv |>
  dplyr::filter(walk_mos_kea > walk_mos_min, !is.na(walk_mos_kea)) |>
  ggplot() +
  aes(walk_mos_kea, fill = child_sex) +
  theme(legend.position="bottom") +
  geom_histogram(bins = 10)

message("Tukey's five number summary (minimum, lower-hinge, median, upper-hinge, maximum): ")

hv$walk_mos_kea |> fivenum()
```

```{r}
#| label: fig-walk-mos-who
#| fig-cap: "Age (mos) of walking onset (WHO criteria) by sex"
hv |>
  dplyr::filter(walk_mos_who > walk_mos_min, !is.na(walk_mos_who)) |>
  ggplot() +
  aes(walk_mos_who, fill = child_sex) +
  geom_histogram(bins=12) +
  theme(legend.position="bottom") +
  theme(legend.title = element_blank())

message("Tukey's five number summary (minimum, lower-hinge, median, upper-hinge, maximum): ")

hv$walk_mos_who |> fivenum()
```

```{r}
#| label: fig-walk-mos-kea-who
#| fig-cap: "Walking onset by WHO vs. KEA criteria"

filtered_walk_mos <- hv |>
  dplyr::filter(walk_mos_who > walk_mos_min, !is.na(walk_mos_who), 
                walk_mos_kea > walk_mos_min, !is.na(walk_mos_kea)) 

filtered_walk_mos |>
  ggplot() +
  aes(walk_mos_who, walk_mos_kea, color = child_sex) +
  geom_point() +
  geom_smooth(method = "lm") +
  xlim(8, 18) +
  ylim(8, 18) +
  theme(legend.position = "bottom") +
  theme(aspect.ratio = 1) +
  theme(legend.title = element_blank()) -> walk_p

ggExtra::ggMarginal(
  walk_p,
  play_loco,
  walk_mos_who,
  walk_mos_kea,
  type = "density",
  margins = "both",
  groupColour = TRUE,
  groupFill = TRUE
)

cor.test(filtered_walk_mos$walk_mos_who, filtered_walk_mos$walk_mos_kea)
```

```{r , fig.cap=}
#| label: fig-walk-mos-kea-crawl-mos
#| fig-cap: "Walking onset vs. Crawling"

filtered_walk_crawl_mos <- hv |>
  dplyr::filter(crawl_mos > crawl_mos_min, !is.na(crawl_mos), 
                walk_mos_kea > walk_mos_min, !is.na(walk_mos_kea))

filtered_walk_crawl_mos |>
  ggplot() +
  aes(crawl_mos, walk_mos_kea, color = child_sex) +
  geom_point() +
  geom_smooth(method = "lm") +
  theme(legend.position = "bottom") +
  theme(aspect.ratio = 1) +
  theme(legend.title = element_blank()) -> walk_crawl_p

ggExtra::ggMarginal(
  walk_crawl_p,
  filtered_walk_crawl_mos,
  crawl_mos,
  walk_mos_kea,
  type = "density",
  margins = "both",
  groupColour = TRUE,
  groupFill = TRUE
)

cor.test(filtered_walk_crawl_mos$crawl_mos, filtered_walk_crawl_mos$walk_mos_kea)
```

## Health {-}

### Feeding {-}

```{r}
#| label: tbl-breastfeeding-by-age-grp
#| tbl-cap: Breastfeeding by age group
xtabs(formula = ~ age_group + feeding_breastfeed, data = hv)
```

```{r , fig.cap=}
#| label: fig-solid-food-mos
#| fig-cap: "Age at introduction of solid foods"
#| 
hv %>%
  dplyr::select(child_sex, feeding_solidfood_age) |>
  dplyr::filter(feeding_solidfood_age < 12) |>
  ggplot() +
  aes(x = feeding_solidfood_age, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  xlab("Introduction of solid foods (mos)") +
  theme(legend.title = element_blank())
```

There are some unlikely values here.

```{r anomalous-feeding}
hv |>
  dplyr::select(participant_id, 
                feeding_solidfood_age) |>
  dplyr::filter(feeding_solidfood_age > 12 | feeding_solidfood_age < 3) %>%
  knitr::kable(format = 'html')
```

::: {.callout-warning}
A preliminary look at `feeding_comments` shows that there are some names mentioned.
So, we do not view them here.

We should consider flagging these in the QA process.
:::

### Sleeping position {-}

These data only focus on `child_sleeping_position`.
Other sleeping data are in the screening questionnaire.

```{r}
#| label: tbl-child-sleeping-position
#| tbl-cap: Child sleeping position by age group
xtabs(formula = ~ child_sleeping_position + age_group, data = hv)
```

### Child health {-}

#### Overall rating  {-}

```{r}
#| label: tbl-child-health-rating
#| tbl-cap: Parent-report of overall child health
child_health_rating <- hv |>
  # dplyr::select(child_sex, age_group, child_health) |>
  dplyr::filter(!is.na(child_health)) |>
  dplyr::mutate(child_health = factor(child_health,
                                      c("poor",
                                        "fair",
                                        "good",
                                        "verygood",
                                        "excellent",
                                        "donotknow",
                                        "refused"),
                                      ordered = TRUE))

xtabs(formula = ~ child_health + age_group, data = child_health_rating)
```

#### Recent vaccination {-}

```{r}
#| label: tbl-recent-vaccination
recent_vax <- hv |>
  dplyr::select(child_sex, age_group, child_recent_vaccination) |>
  dplyr::filter(!is.na(child_recent_vaccination))

xtabs(formula = ~ child_recent_vaccination + age_group, data = recent_vax)
```

#### Seen medical specialist {-}

```{r}
#| label: tbl-seen-specialist
#| tbl-cap: Children who have seen a medical specialist
seen_specialist <- hv |>
  dplyr::select(child_sex, age_group, child_medical_specialist) |>
  dplyr::filter(!is.na(child_medical_specialist))

xtabs(formula = ~ child_medical_specialist + age_group, data = seen_specialist)
```

::: {.callout-warning}
Manual inspection shows some possible identifying information (names) in `child_medical_specialist_comments`.
:::

#### Hearing tested

```{r}
#| label: tbl-hearing-tested
#| tbl-cap: Hearing test and context
hearing_tested <- hv |>
  dplyr::select(child_sex, age_group, child_hearing_tested) |>
  dplyr::filter(!is.na(child_hearing_tested))

xtabs(formula = ~ child_hearing_tested + age_group, data = hearing_tested)
```

#### Vision tested

```{r}
#| label: tbl-vision-tested
#| tbl-cap: Vision test and context
vision_tested <- hv |>
  dplyr::select(child_sex, age_group, child_vision_tested) |>
  dplyr::filter(!is.na(child_vision_tested))

xtabs(formula = ~ child_vision_tested + age_group, data = vision_tested)
```

#### Illnesses and allergies {-}

```{r}
#| label: fig-illness-allergies
#| fig-cap: "Parent reports of child illnesses or allergies."
illness_allergy <- hv |>
  dplyr::select(child_sex, age_group, contains(c("allergies", "ear_infection", 
                                                 "asthma",
                                                 "respiratory",
                                                 "gastrointestinal")))

illness_allergy |>
  tidyr::pivot_longer(!c('child_sex', 'age_group'),
                      names_to = "type",
                      values_to = "response") |>
  dplyr::filter(!is.na(response)) |>
  dplyr::mutate(response = factor(response,
                                  c("no", "yes", "donotknow", "refused"))) |>
  ggplot() +
  aes(x = response, fill = child_sex) +
  geom_bar() +
  facet_grid(cols = vars(type), rows = vars(age_group)) +
  scale_x_discrete(guide = guide_axis(angle = 90)) +
  xlab("") +
  theme(legend.position = "bottom", legend.title = element_blank())
```

#### Injuries

```{r}
#| label: tbl-injuries
#| tbl-cap: Child injuries
xtabs(formula = ~ child_injury_times + age_group, data = hv)
```

### Mom health

#### Smoking & drinking {-}

```{r}
#| label: tbl-smoking-drinking
#| tbl-cap: Smoking or drinking during pregancy
smoking_drinking <- hv |>
  dplyr::select(age_group,
    child_sex,
    contains("smoking"),
    contains("drinking")
  )

xtabs(formula = ~ mom_pregnant_smoking + mom_pregnant_drinking, smoking_drinking)
```

```{r}
#|  label: tbl-smoking-house-car
#|  tbl-cap: Smoking in the house or car
xtabs(formula = ~ smoking_house + smoking_car, smoking_drinking)
```

::: {.callout-warning}
The following *may* contain identifiable data.
:::

```{r, eval=FALSE}
#| label: tbl-comments-smoking
smoking_drinking |>
  dplyr::select(smoking_comments) |>
  dplyr::filter(!is.na(smoking_comments)) |>
  knitr::kable(format = 'html') |>
  kableExtra::kable_classic()
```

```{r}
#| label: tbl-smoking-now
#| tbl-cap: Smoking currently
xtabs(formula = ~ mom_smoking_now, smoking_drinking)
```

```{r}
#| label: tbl-smoking-now-amt
#| tbl-cap: Amount if smoking currently
smoking_drinking$mom_smoking_now_amount[!is.na(smoking_drinking$mom_smoking_now_amount)]
```

::: {.callout-warning}
The following *may* contain identifiable data.
:::

```{r, eval=FALSE}
#| label: tbl-comments-drinking
#| tbl-cap: "Drinking comments"
smoking_drinking |>
  dplyr::select(mom_drinking_comments) |>
  dplyr::filter(!is.na(mom_drinking_comments)) |>
  knitr::kable(format = 'html') |>
  kableExtra::kable_classic()
```

#### Patient Health Questionnaire (PHQ-4) {-}

```{r}
#| label: fig-phq4
#| fig-cap: "PHQ4 responses by age group and child sex"
phq4 <- hv |>
  dplyr::select(child_sex, age_group, contains("phq4_")) |>
  dplyr::select(-contains("comments"))

names(phq4) <- gsub(pattern = "phq4_", replacement = "", names(phq4))

phq4 |>
  tidyr::pivot_longer(!c('child_sex', 'age_group'),
                      names_to = "question",
                      values_to = "response") |>
  dplyr::filter(!is.na(response)) |>
  dplyr::mutate(response = factor(
    response,
    c("notatall", "severaldays", "morethanhalf", "nearly")
  ), ordered = TRUE) |>
  ggplot() +
  aes(x = response, fill = child_sex) +
  geom_bar() +
  facet_grid(cols = vars(question), rows = vars(age_group)) +
  scale_x_discrete(guide = guide_axis(angle = 90)) +
  xlab("") +
  theme(legend.position = "bottom", legend.title = element_blank())
```

## Rothbart ECBQ {-}

The next section provides visualizations of the Rothbart Early Childhood Behavior Questionnaire (ECBQ) data related to child temperament.

```{r}
#| label: select-rothbart-vars
ecbq <- hv |>
  dplyr::select(child_sex, age_group, contains("rothbart"))

ecbq_complete <- ecbq |>
  tidyr::complete() |>
  dplyr::select(-comments_rothbart)

ecbq_vars <- names(ecbq)[stringr::str_detect(names(ecbq_complete),"rothbart_")]
ecbq_vars <- ecbq_vars[!stringr::str_detect(ecbq_vars, "comments_rothbart")]
```

```{r}
#| label: plot-all-rothbart
purrr::map(ecbq_vars, suppressMessages(ecbq_plot), df = ecbq_complete)
```

### Comments {-}

::: {.callout-warning}
Manual inspection shows that the comments field has some names.
We omit printing the comments here until we can be assured that there is no identifiying information in the comments.
:::

```{r, eval=FALSE}
#| label:  ecbq-comments
ecbq |>
  dplyr::select(comments_rothbart) |>
  dplyr::filter(!is.na(comments_rothbart)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

## Media use

### Home technology

```{r}
#| label: tbl-mediause.home_technology.tv
#| tbl-cap: Use of TV at home
xtabs(formula = ~ mediause.home_technology.tv, hv)
```

```{r}
#| label: tbl-mediause.home_technology.dvd
#| tbl-cap: Use of DVD at home
xtabs(formula = ~ mediause.home_technology.dvd, hv)
```

```{r}
#| label: tbl-mediause.home_technology.computer
#| tbl-cap: Use of computer at home
xtabs(formula = ~ mediause.home_technology.computer, hv)
```

```{r}
#| label: tbl-mediause.home_technology.ipad
#| tbl-cap: Use of iPad/tablet at home
xtabs(formula = ~ mediause.home_technology.ipad, hv)
```

```{r}
#| label: tbl-mediause.home_technology.educationalgame
#| tbl-cap: Use of educational games at home
xtabs(formula = ~ mediause.home_technology.educationalgame, hv)
```

```{r}
#| label: tbl-mediause.home_technology.videogame
#| tbl-cap: Use of video games at home
xtabs(formula = ~ mediause.home_technology.videogame, hv)
```

### Child TV

```{r}
#| label: tbl-mediause_technology_child_tv
#| tbl-cap: Use of TV by child
xtabs(formula = ~ mediause_technology_child_tv, hv)
```

::: {.callout-warning}
The following *may* contain identifiable data.
:::

```{r eval=FALSE}
#| label: tbl-mediause_tv_how
hv |>
  dplyr::select(mediause_tv_how) |>
  dplyr::filter(!is.na(mediause_tv_how)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

### Child DVD

```{r}
#| label: tbl-mediause_technology_child_dvd
#| tbl-cap: Use of DVD by child
xtabs(formula = ~ mediause_technology_child_dvd, hv)
```

::: {.callout-warning}
The following *may* contain identifiable data.
:::

```{r eval=FALSE}
#| label: tbl-mediause_dvd_how
hv |>
  dplyr::select(mediause_dvd_how) |>
  dplyr::filter(!is.na(mediause_dvd_how)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

### Child computer

```{r}
#| label: tbl-mediause_technology_child_computer
#| tbl-cap: Use of computer by child
xtabs(formula = ~ mediause_technology_child_computer, hv)
```

::: {.callout-warning}
The following *may* contain identifiable data.
:::

```{r eval=FALSE}
#| label: tbl-mediause_computer_how
hv |>
  dplyr::select(mediause_computer_how) |>
  dplyr::filter(!is.na(mediause_computer_how)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

### Child iPad

```{r}
#| label: tbl-mediause_technology_child_ipad
#| tbl-cap: Use of iPad/tablet by child
xtabs(formula = ~ mediause_technology_child_ipad, hv)
```

::: {.callout-warning}
The following *may* contain identifiable data.
:::

```{r eval=FALSE}
#| label: tbl-mediause_ipad_how
hv |>
  dplyr::select(mediause_ipad_how) |>
  dplyr::filter(!is.na(mediause_ipad_how)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

### Child educational

```{r}
#| label: tbl-mediause_technology_child_educational
#| tbl-cap: Use of educational games by child
xtabs(formula = ~ mediause_technology_child_educational, hv)
```

::: {.callout-warning}
The following *may* contain identifiable data.
:::

```{r eval=FALSE}
#| label: tbl-mediause_educational_how
hv |>
  dplyr::select(mediause_educational_how) |>
  dplyr::filter(!is.na(mediause_educational_how)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

### Child videogame

```{r}
#| label: tbl-mediause_technology_child_videogame
#| tbl-cap: Use of video games by child
xtabs(formula = ~ mediause_technology_child_videogame, hv)
```

::: {.callout-warning}
The following *may* contain identifiable data.
:::

```{r eval=FALSE}
#| label: tbl-mediause_videogame_how
hv |>
  dplyr::select(mediause_videogame_how) |>
  dplyr::filter(!is.na(mediause_videogame_how)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

### TV hrs/day

::: {.callout-warning}
The following *may* contain identifiable data.

Moreover, this is a free-text field that requires further processing to be visualized.
:::

```{r, eval=FALSE}
#| label: tbl-mediause_tv_hrs_per_day

hv |>
  dplyr::select(mediause_tv_hrs_per_day) |>
  dplyr::filter(!is.na(mediause_tv_hrs_per_day)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

### Use meals

```{r}
#| label: tbl-mediause_techuse_meals
#| tbl-cap: Use of technology at meals
xtabs(formula = ~ mediause_techuse_meals, hv)
```

### Use playtime

```{r}
#| label: tbl-mediause_techuse_playtime
#| tbl-cap: Use of technology at playtime
xtabs(formula = ~ mediause_techuse_playtime, hv)
```

### Use bedtime

```{r}
#| label: tbl-mediause_techuse_bedtime
#| tbl-cap: Use of technology at bedtime
xtabs(formula = ~ mediause_techuse_bedtime, hv)
```

### Use transportation

```{r}
#| label: tbl-mediause_techuse_transportation
#| tbl-cap: Use of technology during transportation
xtabs(formula = ~ mediause_techuse_transportation, hv)
```

### Media use comments

::: {.callout-warning}
The following *may* contain identifiable data.
:::

```{r, eval=FALSE}
#| label: tbl-mediause_comments

hv |>
  dplyr::select(mediause_comments) |>
  dplyr::filter(!is.na(mediause_comments)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

## Pets

```{r}
#| label: tbl-pets-at-home
#| tbl-cap: Pets at home
xtabs(formula = ~ pets_at_home, hv)
```


```{r}
hv$pets_types_number[!is.na(hv$pets_types_number)] |> head(20)
```

These data need further cleaning to be visualized properly.

```{r}
hv_pets <- hv |>
  dplyr::mutate(dogs = stringr::str_detect(pets_types_number, "[dD]og"),
                cats = stringr::str_detect(pets_types_number, "[cC]at"))
```

```{r}
#| label: tbl-n-dyads-dogs-cats
#| tbl-cap: "Dogs and/or cats"
xtabs(formula = ~ dogs + cats, hv_pets)
```

```{r}
#| label: tbl-pets-indoors
#| tbl-cap: Pets indoors or out
xtabs(formula = ~ pets_indoors_outdoors, hv)
```

::: {.callout-warning}
There are some identifiable elements in the `comments_pets` field.
:::

```{r, eval=FALSE}
#| label: tbl-pets-comments

hv |>
  dplyr::select(comments_pets) |>
  dplyr::filter(!is.na(comments_pets)) |>
  knitr::kable(format = 'html') |>
  kableExtra::kable_classic()
```

## Division of Labor

### Laundry

```{r}
#| label: fig-laundry_self
hv |>
  ggplot() +
  aes(x = laundry_self, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-laundry_partner
hv |>
  ggplot() +
  aes(x = laundry_partner, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-laundry_otherperson
hv |>
  ggplot() +
  aes(x = laundry_otherperson, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

::: {.callout-warning}
There may be identifiable elements in the next field, so we do not render it.
:::

```{r, eval=FALSE}
#| label: tbl-labor_laundry_otherperson
hv |>
  dplyr::select(labor_laundry_otherperson) |>
  dplyr::filter(!is.na(labor_laundry_otherperson)) |>
  kableExtra::kable(format = 'html') |>
    kableExtra::kable_classic()
```

### Cleaning

```{r}
#| label: fig-cleaning_self
hv |>
  ggplot() +
  aes(x = cleaning_self, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-cleaning_partner
hv |>
  ggplot() +
  aes(x = cleaning_partner, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-cleaning_otherperson
hv |>
  ggplot() +
  aes(x = cleaning_otherperson, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

::: {.callout-warning}
There may be identifiable elements in the next field, so we do not render it.
:::

```{r, eval=FALSE}
#| label: tbl-labor_cleaning_otherperson
hv |>
  dplyr::select(labor_cleaning_otherperson) |>
  dplyr::filter(!is.na(labor_cleaning_otherperson)) |>
  kableExtra::kable(format = 'html') |>
    kableExtra::kable_classic()
```

### Dishes

```{r}
#| label: fig-dishes_self
hv |>
  ggplot() +
  aes(x = dishes_self, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-dishes_partner
hv |>
  ggplot() +
  aes(x = dishes_partner, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-dishes_otherperson
hv |>
  ggplot() +
  aes(x = dishes_otherperson, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

::: {.callout-warning}
There may be identifiable elements in the next field, so we do not render it.
:::

```{r, eval=FALSE}
#| label: tbl-labor_dishes_otherperson
hv |>
  dplyr::select(labor_dishes_otherperson) |>
  dplyr::filter(!is.na(labor_dishes_otherperson)) |>
  kableExtra::kable(format = 'html') |>
    kableExtra::kable_classic()
```

### Cooking

```{r}
#| label: fig-cooking_self
hv |>
  ggplot() +
  aes(x = cooking_self, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-cooking_partner
hv |>
  ggplot() +
  aes(x = cooking_partner, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-cooking_otherperson
hv |>
  ggplot() +
  aes(x = cooking_otherperson, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

::: {.callout-warning}
There may be identifiable elements in the next field, so we do not render it.
:::

```{r, eval=FALSE}
#| label: tbl-labor_cooking_otherperson
hv |>
  dplyr::select(labor_cooking_otherperson) |>
  dplyr::filter(!is.na(labor_cooking_otherperson)) |>
  kableExtra::kable(format = 'html') |>
    kableExtra::kable_classic()
```

### Feeding

```{r}
#| label: fig-feeding_self
hv |>
  ggplot() +
  aes(x = feeding_self, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-feeding_partner
hv |>
  ggplot() +
  aes(x = feeding_partner, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-feeding_otherperson
hv |>
  ggplot() +
  aes(x = feeding_otherperson, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

::: {.callout-warning}
There may be identifiable elements in the next field, so we do not render it.
:::

```{r, eval=FALSE}
#| label: tbl-labor_feeding_otherperson
hv |>
  dplyr::select(labor_feeding_otherperson) |>
  dplyr::filter(!is.na(labor_feeding_otherperson)) |>
  kableExtra::kable(format = 'html') |>
    kableExtra::kable_classic()
```

### Drop-off/pick-up

```{r}
#| label: fig-droppick_self
hv |>
  ggplot() +
  aes(x = droppick_self, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-droppick_partner
hv |>
  ggplot() +
  aes(x = droppick_partner, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-droppick_otherperson
hv |>
  ggplot() +
  aes(x = droppick_otherperson, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

::: {.callout-warning}
There may be identifiable elements in the next field, so we do not render it.
:::

```{r, eval=FALSE}
#| label: tbl-labor_droppick_otherperson
hv |>
  dplyr::select(labor_droppick_otherperson) |>
  dplyr::filter(!is.na(labor_droppick_otherperson)) |>
  kableExtra::kable(format = 'html') |>
    kableExtra::kable_classic()
```

### Bedtime

```{r}
#| label: fig-bed_self
hv |>
  ggplot() +
  aes(x = bed_self, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-bed_partner
hv |>
  ggplot() +
  aes(x = bed_partner, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-bed_otherperson
hv |>
  ggplot() +
  aes(x = droppick_otherperson, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

::: {.callout-warning}
There may be identifiable elements in the next field, so we do not render it.
:::

```{r, eval=FALSE}
#| label: tbl-labor_bed_otherperson
hv |>
  dplyr::select(labor_bed_otherperson) |>
  dplyr::filter(!is.na(labor_bed_otherperson)) |>
  kableExtra::kable(format = 'html') |>
    kableExtra::kable_classic()
```

### Disciplining

```{r}
#| label: fig-disciplining_self
hv |>
  ggplot() +
  aes(x = disciplining_self, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-disciplining_partner
hv |>
  ggplot() +
  aes(x = disciplining_partner, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

```{r}
#| label: fig-disciplining_otherperson
hv |>
  ggplot() +
  aes(x = disciplining_otherperson, color = child_sex, fill = child_sex) +
  geom_histogram(bins = 6) +
  theme(legend.title = element_blank())
```

::: {.callout-warning}
There may be identifiable elements in the next field, so we do not render it.
:::

```{r, eval=FALSE}
#| label: tbl-labor_disciplining_otherperson
hv |>
  dplyr::select(labor_disciplining_otherperson) |>
  dplyr::filter(!is.na(labor_disciplining_otherperson)) |>
  kableExtra::kable(format = 'html') |>
    kableExtra::kable_classic()
```

### Comments

::: {.callout-warning}
There may be identifiable elements in the next field, so we do not render it.
:::

```{r, eval=FALSE}
#| label: tbl-comments_division_labor
hv |>
  dplyr::select(comments_division_labor) |>
  dplyr::filter(!is.na(comments_division_labor)) |>
  kableExtra::kable(format = 'html') |>
    kableExtra::kable_classic()
```

## Typical day

```{r}
#| label: tbl-typical-behavior
xtabs(formula = ~ typical_behavior, hv)
```

::: {.callout-warning}
The following code will permit visualization of the comments, but the data should be checked for identifiable information before putting it in this document.
:::

```{r eval=FALSE}
#| label: tbl-typical_behavior_specifics
hv |>
  dplyr::select(typical_behavior_specifics) |>
  dplyr::filter(!is.na(typical_behavior_specifics)) |>
  knitr::kable(format = 'html') |>
  kableExtra::kable_classic()
```

```{r}
#| label: tbl-typical_activities
xtabs(formula = ~ typical_activities, hv)
```

::: {.callout-warning}
The following code will permit visualization of the comments, but the data should be checked for identifiable information before putting it in this document.
:::

```{r eval=FALSE}
#| label: tbl-typical_activities_specifics
hv |>
  dplyr::select(typical_activities_specifics) |>
  dplyr::filter(!is.na(typical_activities_specifics)) |>
  knitr::kable(format = 'html') |>
  kableExtra::kable_classic()
```

```{r}
#| label: tbl-typical_nightmorning
xtabs(formula = ~ typical_nightmorning, hv)
```

::: {.callout-warning}
The following code will permit visualization of the comments, but the data should be checked for identifiable information before putting it in this document.
:::

```{r eval=FALSE}
#| label: tbl-typical_nightmorning_specifics
hv |>
  dplyr::select(typical_nightmorning_specifics) |>
  dplyr::filter(!is.na(typical_nightmorning_specifics)) |>
  knitr::kable(format = 'html') |>
  kableExtra::kable_classic()
```

```{r}
#| label: tbl-typical_otherthanme
xtabs(formula = ~ typical_otherthanme, hv)
```

::: {.callout-warning}
The following code will permit visualization of the comments, but the data should be checked for identifiable information before putting it in this document.
:::

```{r eval=FALSE}
#| label: tbl-typical_otherthanme_specifics
hv |>
  dplyr::select(typical_otherthanme_specifics) |>
  dplyr::filter(!is.na(typical_otherthanme_specifics)) |>
  knitr::kable(format = 'html') |>
  kableExtra::kable_classic()
```
