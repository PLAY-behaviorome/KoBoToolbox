[
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "PLAY Survey Data",
    "section": "",
    "text": "This section describes the background about the setup procedure."
  },
  {
    "objectID": "setup.html#authentication",
    "href": "setup.html#authentication",
    "title": "PLAY Survey Data",
    "section": "Authentication",
    "text": "Authentication\nThe data are stored in an account on https://kf.kobotoolbox.org. The login credentials for that account are shared among the PLAY Project staff. To access the site’s API programmatically, an API key was downloaded and added to the local ~/.Renviron file.\n\n\n\n\n\n\nImportant\n\n\n\nThe KoBoToolBox API key is not synched to GitHub."
  },
  {
    "objectID": "setup.html#set-up",
    "href": "setup.html#set-up",
    "title": "PLAY Survey Data",
    "section": "Set-up",
    "text": "Set-up\nTo test whether the local system has the API key installed, we can run the command Sys.getenv(\"KOBO_API_KEY\").\n\nCheck KoBo API Key\n\nkb_api &lt;- Sys.getenv(\"KOBO_API_KEY\")\nif ((length(kb_api) != 1) || (!is.character(kb_api))) {\n  stop(\"'KOBO_API_KEY' not installed in .Renviron\")\n} else {\n  message(\"'KOBO_API_KEY' installed.\")\n}\n\n'KOBO_API_KEY' installed.\n\n\n\n\nDatabrary credentials\nThe databraryr package handles authenticating to Databrary. For scripting access to Databrary that require authentication, it is useful to store the user’s Databrary login (email) in .Renviron using the R command Sys.setenv(DATABRARY_LOGIN = \"&lt;email@provider.com&gt;\") where you substitute your Databrary login (email) for &lt;email@provider.com&gt;.\nHere, we check that .Renviron contains DATABRARY_LOGIN.\n\ndb_api &lt;- Sys.getenv(\"DATABRARY_LOGIN\")\nif ((length(kb_api) != 1) || (!is.character(db_api))) {\n  stop(\"'DATABRARY_LOGIN' not installed in .Renviron\")\n} else {\n  message(\"'DATABRARY_LOGIN' installed.\")\n}\n\n'DATABRARY_LOGIN' installed.\n\n\n\n\nInstall dependencies\nWe use the renv package to manage package dependencies.\n\n\nLoad/source helper functions\nMost of the work is contained in functions located in R/. The functions in this directory are sourced when tar_make() from the {targets} package is sourced.\n\n\n\n\n\n\nNote\n\n\n\nThe update_report_render.R function handles updating all data targets and rendering the report. So, the typical workflow to update the report is as follows;\nsource(\"R/update_report_render.R\")\nupdate_report_render()\n\n\n\n\n\n\n\n\nImportant\n\n\n\nNone of the data outputs are synched to GitHub.\nWe have .gitignore files in the data/ directories and subdirectories that keep all data out of the version control database."
  },
  {
    "objectID": "setup.html#approach",
    "href": "setup.html#approach",
    "title": "PLAY Survey Data",
    "section": "Approach",
    "text": "Approach\nTo make the workflow more robust and reproducible, much of the work is embedded in functions and extensive use is made of the {targets} package mentioned previously."
  },
  {
    "objectID": "screening-gather.html",
    "href": "screening-gather.html",
    "title": "Screening: Gathering",
    "section": "",
    "text": "Details about the data collection protocol for participant screening and recruiting can be found on the PLAY Project website.\n\n\nWe load functions needed to download KBT screening/demographic questionnaire files.\n\nfl &lt;- list.files(file.path(here::here(), \"R\"), \"^kobo_|^file_|^screen_|CONSTANTS\", full.names = TRUE)\npurrr::walk(fl, source)\n\nlibrary(tidyverse) # for the `magrittr` pipe `%&gt;%`\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\n\n\nWe make use of the targets package for downloading data files from KoBoToolbox and for saving local XLSX and CSV copies. This allows us to download and process those files on a regular basis.\nThis excerpt from _targets.R shows two of these ‘targets’:\n  # Download screening/demographic survey\n  tar_target(\n    kb_screen_df,\n    kobo_list_data_filtered(kb_df, \"[Dd]emographic\"),\n    cue = tarchetypes::tar_cue_age(\n      name = kb_screen,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  ),\n  tar_target(\n    screen_download,\n    screen_download_convert(kb_screen_df, \"data/xlsx/screening\", \"data/csv/screening\"),\n    cue = tarchetypes::tar_cue_age(\n      name = screen_df,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  ),\nThe kb_df data frame is input to the first target kb_screen_df. kb_df is generated when the following target is generated (by kobo_list_data()).\n  tar_target(\n    kb_df,\n    kobo_list_data(),\n    cue = tarchetypes::tar_cue_age(\n      name = kb_df,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  ),\n\n\nWe have two targets specified in _targets.R that handle the regular downloading of screening data files.\nFirst, we generate a data frame of KoBoToolbox forms that contain the screening (“Demographic”) data. Here is the target for that process:\n# Not evaluated\n  tar_target(\n    kb_screen_df,\n    kobo_list_data_filtered(\"[Dd]emographic\"),\n    cue = tarchetypes::tar_cue_age(\n      name = kb_screen,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  ),\nThen we download and save the raw XLSX files to ../data/xlsx/screening using kobo_retrieve_save_many_xlsx(kb_screen_df, save_dir = \"../data/xlsx/screening\"). Finally, we convert the XLSX files to CSVs via file_load_xlsx_save_many_csv(\"../data/xlsx/screening\", \"../data/csv/screening\", \"Demographic\"). The latter two steps are handled by the wrapper function screen_download_convert(kb_screen_df, \"data/xlsx/screening\", \"data/csv/screening\"). Here is the accompanying target:\n# Download screening/demographic survey\n  tar_target(\n    screen_download,\n    screen_download_convert(kb_screen_df, \"data/xlsx/screening\", \"data/csv/screening\"),\n    cue = tarchetypes::tar_cue_age(\n      name = screen_df,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  ),\nWe can confirm that these functions have run properly, as follows:\n\nscreening_fl &lt;- list.files(\"../data/csv/screening/\", pattern = \"*.csv$\")\n\n\n\n\nThere are n=3 screening/demographic data files.\nThe KoBoToolbox API enables us to download a table with the questions, as follows.\n\ntargets::tar_load(kb_screen_df, store=\"../_targets\")\nkb_screen_df\n\n      id              id_string                                    title\n1 334134 agChfbnGHc6fiUdfYUaZ2z PLAY Demographic Questionnaire (Spanish)\n2 359546 aGLEqT7eRBhuPgizCQBeqA           PLAY Demographic Questionnaire\n3 275882 anqhvxKtQieo7gc9uPqJ3y           PLAY Demographic Questionnaire\n                               description\n1 PLAY Demographic Questionnaire (Spanish)\n2            New Demographic Questionnaire\n3                 PLAY Phone Questionnaire\n                                            url\n1 https://kc.kobotoolbox.org/api/v1/data/334134\n2 https://kc.kobotoolbox.org/api/v1/data/359546\n3 https://kc.kobotoolbox.org/api/v1/data/275882\n                                                             form_url\n1 https://kf.kobotoolbox.org/api/v2/assets/agChfbnGHc6fiUdfYUaZ2z.xls\n2 https://kf.kobotoolbox.org/api/v2/assets/aGLEqT7eRBhuPgizCQBeqA.xls\n3 https://kf.kobotoolbox.org/api/v2/assets/anqhvxKtQieo7gc9uPqJ3y.xls\n\n\nBased on this information, we know that the questionnaires may be downloaded from the following URLs:\n\npaste0(\"https://kf.kobotoolbox.org/api/v2/assets/\", kb_screen_df$id_string, \".xls\")\n\n[1] \"https://kf.kobotoolbox.org/api/v2/assets/agChfbnGHc6fiUdfYUaZ2z.xls\"\n[2] \"https://kf.kobotoolbox.org/api/v2/assets/aGLEqT7eRBhuPgizCQBeqA.xls\"\n[3] \"https://kf.kobotoolbox.org/api/v2/assets/anqhvxKtQieo7gc9uPqJ3y.xls\"\n\n\nWe import and clean the screening/demographic data in the next section."
  },
  {
    "objectID": "screening-gather.html#collection-protocol",
    "href": "screening-gather.html#collection-protocol",
    "title": "Screening: Gathering",
    "section": "",
    "text": "Details about the data collection protocol for participant screening and recruiting can be found on the PLAY Project website.\n\n\nWe load functions needed to download KBT screening/demographic questionnaire files.\n\nfl &lt;- list.files(file.path(here::here(), \"R\"), \"^kobo_|^file_|^screen_|CONSTANTS\", full.names = TRUE)\npurrr::walk(fl, source)\n\nlibrary(tidyverse) # for the `magrittr` pipe `%&gt;%`\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "screening-gather.html#retrieve-from-kobotoolbox-kbt",
    "href": "screening-gather.html#retrieve-from-kobotoolbox-kbt",
    "title": "Screening: Gathering",
    "section": "",
    "text": "We make use of the targets package for downloading data files from KoBoToolbox and for saving local XLSX and CSV copies. This allows us to download and process those files on a regular basis.\nThis excerpt from _targets.R shows two of these ‘targets’:\n  # Download screening/demographic survey\n  tar_target(\n    kb_screen_df,\n    kobo_list_data_filtered(kb_df, \"[Dd]emographic\"),\n    cue = tarchetypes::tar_cue_age(\n      name = kb_screen,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  ),\n  tar_target(\n    screen_download,\n    screen_download_convert(kb_screen_df, \"data/xlsx/screening\", \"data/csv/screening\"),\n    cue = tarchetypes::tar_cue_age(\n      name = screen_df,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  ),\nThe kb_df data frame is input to the first target kb_screen_df. kb_df is generated when the following target is generated (by kobo_list_data()).\n  tar_target(\n    kb_df,\n    kobo_list_data(),\n    cue = tarchetypes::tar_cue_age(\n      name = kb_df,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  ),\n\n\nWe have two targets specified in _targets.R that handle the regular downloading of screening data files.\nFirst, we generate a data frame of KoBoToolbox forms that contain the screening (“Demographic”) data. Here is the target for that process:\n# Not evaluated\n  tar_target(\n    kb_screen_df,\n    kobo_list_data_filtered(\"[Dd]emographic\"),\n    cue = tarchetypes::tar_cue_age(\n      name = kb_screen,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  ),\nThen we download and save the raw XLSX files to ../data/xlsx/screening using kobo_retrieve_save_many_xlsx(kb_screen_df, save_dir = \"../data/xlsx/screening\"). Finally, we convert the XLSX files to CSVs via file_load_xlsx_save_many_csv(\"../data/xlsx/screening\", \"../data/csv/screening\", \"Demographic\"). The latter two steps are handled by the wrapper function screen_download_convert(kb_screen_df, \"data/xlsx/screening\", \"data/csv/screening\"). Here is the accompanying target:\n# Download screening/demographic survey\n  tar_target(\n    screen_download,\n    screen_download_convert(kb_screen_df, \"data/xlsx/screening\", \"data/csv/screening\"),\n    cue = tarchetypes::tar_cue_age(\n      name = screen_df,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  ),\nWe can confirm that these functions have run properly, as follows:\n\nscreening_fl &lt;- list.files(\"../data/csv/screening/\", pattern = \"*.csv$\")\n\n\n\n\nThere are n=3 screening/demographic data files.\nThe KoBoToolbox API enables us to download a table with the questions, as follows.\n\ntargets::tar_load(kb_screen_df, store=\"../_targets\")\nkb_screen_df\n\n      id              id_string                                    title\n1 334134 agChfbnGHc6fiUdfYUaZ2z PLAY Demographic Questionnaire (Spanish)\n2 359546 aGLEqT7eRBhuPgizCQBeqA           PLAY Demographic Questionnaire\n3 275882 anqhvxKtQieo7gc9uPqJ3y           PLAY Demographic Questionnaire\n                               description\n1 PLAY Demographic Questionnaire (Spanish)\n2            New Demographic Questionnaire\n3                 PLAY Phone Questionnaire\n                                            url\n1 https://kc.kobotoolbox.org/api/v1/data/334134\n2 https://kc.kobotoolbox.org/api/v1/data/359546\n3 https://kc.kobotoolbox.org/api/v1/data/275882\n                                                             form_url\n1 https://kf.kobotoolbox.org/api/v2/assets/agChfbnGHc6fiUdfYUaZ2z.xls\n2 https://kf.kobotoolbox.org/api/v2/assets/aGLEqT7eRBhuPgizCQBeqA.xls\n3 https://kf.kobotoolbox.org/api/v2/assets/anqhvxKtQieo7gc9uPqJ3y.xls\n\n\nBased on this information, we know that the questionnaires may be downloaded from the following URLs:\n\npaste0(\"https://kf.kobotoolbox.org/api/v2/assets/\", kb_screen_df$id_string, \".xls\")\n\n[1] \"https://kf.kobotoolbox.org/api/v2/assets/agChfbnGHc6fiUdfYUaZ2z.xls\"\n[2] \"https://kf.kobotoolbox.org/api/v2/assets/aGLEqT7eRBhuPgizCQBeqA.xls\"\n[3] \"https://kf.kobotoolbox.org/api/v2/assets/anqhvxKtQieo7gc9uPqJ3y.xls\"\n\n\nWe import and clean the screening/demographic data in the next section."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PLAY Survey Data",
    "section": "",
    "text": "Version: 2024-08-06 14:28:11.458663"
  },
  {
    "objectID": "index.html#purpose",
    "href": "index.html#purpose",
    "title": "PLAY Survey Data",
    "section": "Purpose",
    "text": "Purpose\nPLAY project researchers use KoBoToolbox to collect data from participant families. Data from all sessions at all PLAY data collection sites are pushed to a common set of files on the KoBoToolbox server.\nThis document describes the process of i) downloading, ii) parsing, iii) cleaning, and iv) exporting these files into forms more suitable for data analysis.\nFor details about the PLAY Project data collection protocol, see https://PLAY-behaviorome.github.io/protocol/."
  },
  {
    "objectID": "index.html#overview-of-data-sets",
    "href": "index.html#overview-of-data-sets",
    "title": "PLAY Survey Data",
    "section": "Overview of data sets",
    "text": "Overview of data sets\nThere are three sets of data collected using KoBoToolbox. One set is collected during the recruiting and screening calls for the study. The second set is collected during the home visit. The third set consists of notes generated by the experimenter after the visit.\n\nData access and processing\nAll data are downloaded and manipulated locally but are not synched to GitHub. This is accomplished by adding data to .gitignore.\nThere are separate processes for detecting and deleting personal identifiers from specific data files and exporting ‘cleaned’ versions that may be shared on Databrary.\n\n\nHome visit data\nThere are three (3) age groups (12-, 18-, and 24-month-olds) and four (4) different language environment groups (English-only, Spanish-only, Bilingual-English-dominant, Bilingual-Spanish-dominant). Since the language of the questions and some of the specific questions vary by age group and by language environment group, there multiple KoBoToolbox survey form files that must be processed."
  },
  {
    "objectID": "screening-clean.html",
    "href": "screening-clean.html",
    "title": "Screening: Cleaning",
    "section": "",
    "text": "We source a set of cleaning functions have the screen_ prefix.\n\npurrr::walk(list.files(file.path(here::here(), \"R\"), \n                    \"^screen_\", full.names = TRUE), source)\n\nThere are three CSV files to clean:\n\n(fn &lt;- list.files(\"../data/csv/screening\", \"[Dd]emographic\", full.names = TRUE))\n\n[1] \"../data/csv/screening/275882_PLAY_Demographic_Questionnaire.csv\"        \n[2] \"../data/csv/screening/334134_PLAY_Demographic_Questionnaire_Spanish.csv\"\n[3] \"../data/csv/screening/359546_PLAY_Demographic_Questionnaire.csv\"        \n\n\nWe clean them separately, as needed, then merge them.\n\n\n\n\ndf1 &lt;-\n  readr::read_csv(fn[1],\n                  col_types = readr::cols(.default = 'c'),\n                  show_col_types = FALSE)\ndf2 &lt;-\n  readr::read_csv(fn[2],\n                  col_types = readr::cols(.default = 'c'),\n                  show_col_types = FALSE)\ndf3 &lt;-\n  readr::read_csv(fn[3],\n                  col_types = readr::cols(.default = 'c'),\n                  show_col_types = FALSE)\n\n\nhead(names(df1), 15)\n\n [1] \"start\"                                                                        \n [2] \"end\"                                                                          \n [3] \"c_today\"                                                                      \n [4] \"play_phone_questionnaire/update_date\"                                         \n [5] \"play_phone_questionnaire/group_contact_info/instructions_contactinfo\"         \n [6] \"play_phone_questionnaire/group_contact_info/parent_phone\"                     \n [7] \"play_phone_questionnaire/group_contact_info/parent_email\"                     \n [8] \"play_phone_questionnaire/group_contact_info/group_address/note_parent_address\"\n [9] \"play_phone_questionnaire/group_contact_info/group_address/parent_address_1\"   \n[10] \"play_phone_questionnaire/group_contact_info/group_address/parent_address_2\"   \n[11] \"play_phone_questionnaire/group_contact_info/group_address/city\"               \n[12] \"play_phone_questionnaire/group_contact_info/group_address/state\"              \n[13] \"play_phone_questionnaire/group_contact_info/acknowledge_contact_info\"         \n[14] \"play_phone_questionnaire/instructions_guid\"                                   \n[15] \"play_phone_questionnaire/child_first_name\"                                    \n\n\n\nhead(names(df2), 15)\n\n [1] \"start\"                                                                                                                                                                                                                                    \n [2] \"end\"                                                                                                                                                                                                                                      \n [3] \"c_today\"                                                                                                                                                                                                                                  \n [4] \"play_demo_questionnaire/update_date\"                                                                                                                                                                                                      \n [5] \"play_demo_questionnaire/NOTA_El_cuestionario_demogr_fico_debe_ser_completado_por_el_investigador_que_va_a_ir_a_la_visita_al_hogar_con_la_madre_por_tel_fono_La_madre_deber_a_ser_la_madre_que_va_a_participar_en_el_estudio_con_su_ni_o_a\"\n [6] \"play_demo_questionnaire/group_siteinfo/site_id\"                                                                                                                                                                                           \n [7] \"play_demo_questionnaire/group_siteinfo/subject_number\"                                                                                                                                                                                    \n [8] \"play_demo_questionnaire/exp_name\"                                                                                                                                                                                                         \n [9] \"play_demo_questionnaire/group_contact_info/instructions_contactinfo\"                                                                                                                                                                      \n[10] \"play_demo_questionnaire/group_contact_info/parent_phone\"                                                                                                                                                                                  \n[11] \"play_demo_questionnaire/group_contact_info/parent_email\"                                                                                                                                                                                  \n[12] \"play_demo_questionnaire/group_contact_info/group_address/note_parent_address\"                                                                                                                                                             \n[13] \"play_demo_questionnaire/group_contact_info/group_address/parent_address_1\"                                                                                                                                                                \n[14] \"play_demo_questionnaire/group_contact_info/group_address/parent_address_2\"                                                                                                                                                                \n[15] \"play_demo_questionnaire/group_contact_info/group_address/city\"                                                                                                                                                                            \n\n\n\nhead(names(df3), 15)\n\n [1] \"start\"                                                                       \n [2] \"end\"                                                                         \n [3] \"c_today\"                                                                     \n [4] \"play_demo_questionnaire/update_date\"                                         \n [5] \"play_demo_questionnaire/note_exp\"                                            \n [6] \"play_demo_questionnaire/group_siteinfo/site_id\"                              \n [7] \"play_demo_questionnaire/group_siteinfo/subject_number\"                       \n [8] \"play_demo_questionnaire/group_siteinfo/exp_name\"                             \n [9] \"play_demo_questionnaire/group_contact_info/instructions_contactinfo\"         \n[10] \"play_demo_questionnaire/group_contact_info/parent_phone\"                     \n[11] \"play_demo_questionnaire/group_contact_info/parent_email\"                     \n[12] \"play_demo_questionnaire/group_contact_info/group_address/note_parent_address\"\n[13] \"play_demo_questionnaire/group_contact_info/group_address/parent_address_1\"   \n[14] \"play_demo_questionnaire/group_contact_info/group_address/parent_address_2\"   \n[15] \"play_demo_questionnaire/group_contact_info/group_address/city\"               \n\n\n\nhead(names(df1), 15)\n\n [1] \"start\"                                                                        \n [2] \"end\"                                                                          \n [3] \"c_today\"                                                                      \n [4] \"play_phone_questionnaire/update_date\"                                         \n [5] \"play_phone_questionnaire/group_contact_info/instructions_contactinfo\"         \n [6] \"play_phone_questionnaire/group_contact_info/parent_phone\"                     \n [7] \"play_phone_questionnaire/group_contact_info/parent_email\"                     \n [8] \"play_phone_questionnaire/group_contact_info/group_address/note_parent_address\"\n [9] \"play_phone_questionnaire/group_contact_info/group_address/parent_address_1\"   \n[10] \"play_phone_questionnaire/group_contact_info/group_address/parent_address_2\"   \n[11] \"play_phone_questionnaire/group_contact_info/group_address/city\"               \n[12] \"play_phone_questionnaire/group_contact_info/group_address/state\"              \n[13] \"play_phone_questionnaire/group_contact_info/acknowledge_contact_info\"         \n[14] \"play_phone_questionnaire/instructions_guid\"                                   \n[15] \"play_phone_questionnaire/child_first_name\"                                    \n\n\n\nhead(names(df2), 15)\n\n [1] \"start\"                                                                                                                                                                                                                                    \n [2] \"end\"                                                                                                                                                                                                                                      \n [3] \"c_today\"                                                                                                                                                                                                                                  \n [4] \"play_demo_questionnaire/update_date\"                                                                                                                                                                                                      \n [5] \"play_demo_questionnaire/NOTA_El_cuestionario_demogr_fico_debe_ser_completado_por_el_investigador_que_va_a_ir_a_la_visita_al_hogar_con_la_madre_por_tel_fono_La_madre_deber_a_ser_la_madre_que_va_a_participar_en_el_estudio_con_su_ni_o_a\"\n [6] \"play_demo_questionnaire/group_siteinfo/site_id\"                                                                                                                                                                                           \n [7] \"play_demo_questionnaire/group_siteinfo/subject_number\"                                                                                                                                                                                    \n [8] \"play_demo_questionnaire/exp_name\"                                                                                                                                                                                                         \n [9] \"play_demo_questionnaire/group_contact_info/instructions_contactinfo\"                                                                                                                                                                      \n[10] \"play_demo_questionnaire/group_contact_info/parent_phone\"                                                                                                                                                                                  \n[11] \"play_demo_questionnaire/group_contact_info/parent_email\"                                                                                                                                                                                  \n[12] \"play_demo_questionnaire/group_contact_info/group_address/note_parent_address\"                                                                                                                                                             \n[13] \"play_demo_questionnaire/group_contact_info/group_address/parent_address_1\"                                                                                                                                                                \n[14] \"play_demo_questionnaire/group_contact_info/group_address/parent_address_2\"                                                                                                                                                                \n[15] \"play_demo_questionnaire/group_contact_info/group_address/city\"                                                                                                                                                                            \n\n\n\nhead(names(df3), 15)\n\n [1] \"start\"                                                                       \n [2] \"end\"                                                                         \n [3] \"c_today\"                                                                     \n [4] \"play_demo_questionnaire/update_date\"                                         \n [5] \"play_demo_questionnaire/note_exp\"                                            \n [6] \"play_demo_questionnaire/group_siteinfo/site_id\"                              \n [7] \"play_demo_questionnaire/group_siteinfo/subject_number\"                       \n [8] \"play_demo_questionnaire/group_siteinfo/exp_name\"                             \n [9] \"play_demo_questionnaire/group_contact_info/instructions_contactinfo\"         \n[10] \"play_demo_questionnaire/group_contact_info/parent_phone\"                     \n[11] \"play_demo_questionnaire/group_contact_info/parent_email\"                     \n[12] \"play_demo_questionnaire/group_contact_info/group_address/note_parent_address\"\n[13] \"play_demo_questionnaire/group_contact_info/group_address/parent_address_1\"   \n[14] \"play_demo_questionnaire/group_contact_info/group_address/parent_address_2\"   \n[15] \"play_demo_questionnaire/group_contact_info/group_address/city\"               \n\n\n\nWe remove the unneeded ’play_demo_*’ and ‘play_phone_questionnaire_’ variable headers using screen_remove_variable_headers().\nWe remove fields that contain administrative metadata with screen_remove_metadata_fields().\nWe remove fields used only by staff in uploading data to Databrary using screen_remove_databrary_fields().\nWe have name and address information in the screening data (e.g., ‘..parent_phone’, ‘..parent_email’, etc.). We remove this and other identifiable information using screen_remove_identifiers().\n\n\n\n\n\n\nNote\n\n\n\nIn a future workflow, we will add Census FIPS IDs for the State and Country before removing the address information.\nThe Census queries stopped working around 2023-06-16.\nFor now, we remove identifiers without querying the Census.\n\n\nWe remove identifiable information using screen_remove_identifiers().\nThen, we use dplyr::full_join() to combine the set of individually cleaned data files. The screen_clean_raw_csv() function combines the previous screen_remove* functions. The screen_clean_raw_join() function cleans each CSV then joins them.\n\n(scr_df &lt;- screen_clean_raw_join())\n\nCleaning '/Users/rog1/rrr/KoBoToolbox/data/csv/screening/275882_PLAY_Demographic_Questionnaire.csv'.\n\n\nLoading required package: stringr\n\n\nRemoved n = 31 of 168 columns.\n\n\nLoading required package: dplyr\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCleaning '/Users/rog1/rrr/KoBoToolbox/data/csv/screening/334134_PLAY_Demographic_Questionnaire_Spanish.csv'.\n\n\nRemoved n = 47 of 236 columns.\n\n\nCleaning '/Users/rog1/rrr/KoBoToolbox/data/csv/screening/359546_PLAY_Demographic_Questionnaire.csv'.\n\n\nRemoved n = 47 of 239 columns.\n\n\nJoining with `by = join_by(start, end, c_today, update_date, site_id,\nsubject_number, state, check_childage, check_childage_weeks, child_sex, day,\nday2, day1, play_id, language_spoken_mom, `language_spoken_mom/english`,\n`language_spoken_mom/spanish`, `language_spoken_mom/other`,\nlanguage_spoken_mom_other, language_spoken_child,\n`language_spoken_child/english`, `language_spoken_child/spanish`,\n`language_spoken_child/other`, language_spoken_child_other,\nlanguage_spoken_house, `language_spoken_house/english`,\n`language_spoken_house/spanish`, `language_spoken_house/other`,\nlanguage_spoken_house_other, `child_information/child_bornonduedate`,\n`child_information/child_onterm`, `child_information/child_duedate`,\n`child_information/child_birthage`, `child_information/child_weight_pounds`,\n`child_information/child_weight_ounces`,\n`child_information/child_birth_complications`,\n`child_information/specify_birth_complications`,\n`child_information/hearing_disabilities`, `child_information/specify_hearing`,\n`child_information/vision_disabilities`, `child_information/specify_vision`,\n`child_information/major_illnesses_injuries`,\n`child_information/specify_illnesses_injuries`,\n`child_information/other_developmentaldelays`,\n`child_information/specify_developmentaldelays`,\n`child_information/child_race`, `child_information/child_sleep_time`,\n`child_information/child_wake_time`, `child_information/child_nap_hours`,\n`child_information/child_sleep_location`,\n`child_information/specify_child_sleep_location`,\n`child_information/indicate_child`, `child_information/indicate_child_2`,\n`group_family_structure/only_child`,\n`group_family_structure/specify_onlychild`,\n`group_family_structure/household_members`,\n`group_family_structure/household_members/father_biological`,\n`group_family_structure/household_members/male_partner`,\n`group_family_structure/household_members/mother_biological`,\n`group_family_structure/household_members/female_partner`,\n`group_family_structure/household_members/other_partner`,\n`group_family_structure/household_members/sibling_biological`,\n`group_family_structure/household_members/sibling_nonbiological`,\n`group_family_structure/household_members/grandmother`,\n`group_family_structure/household_members/grandfather`,\n`group_family_structure/household_members/great_grandmother`,\n`group_family_structure/household_members/great_grandfather`,\n`group_family_structure/household_members/aunt`,\n`group_family_structure/household_members/uncle`,\n`group_family_structure/household_members/cousin`,\n`group_family_structure/household_members/relative`,\n`group_family_structure/household_members/non_relative`,\n`group_family_structure/household_members/none`,\n`group_family_structure/other_relatives`,\n`group_family_structure/other_non_relatives`,\n`group_family_structure/indicate_familystructure`,\n`group_mominfo/mom_biological`, `group_mominfo/mom_relation`,\n`group_mominfo/mom_datecare`, `group_mominfo/mom_childbirth_age`,\n`group_mominfo/check_mom_childbirth_age`, `group_mominfo/mom_race`,\n`group_mominfo/mom_birth_country`, `group_mominfo/specify_mom_birth_country`,\n`group_mominfo/mom_education`, `group_mominfo/mom_employment`,\n`group_mominfo/mom_occupation`, `group_mominfo/mom_jobs_number`,\n`group_mominfo/mom_training`, `group_mominfo/mom_condition`,\n`group_mominfo/specify_mom_condition`, `group_mominfo/indicate_mom`,\n`group_biodad/biodad_childbirth_age`,\n`group_biodad/check_biodad_childbirth_age`, `group_biodad/biodad_race`,\n`group_biodad/indicate_biodad`, `group_biomom/biomom_childbirth_age`,\n`group_biomom/check_biomom_childbirth_age`, `group_biomom/biomom_race`,\n`group_biomom/indicate_biomom`, `group_nonbiopartner/nonbiopartner_race`,\n`group_nonbiopartner/indicate_nonbiopartner`,\n`group_genpartner_info/partner_education`,\n`group_genpartner_info/partner_employment`,\n`group_genpartner_info/partner_occupation`,\n`group_genpartner_info/partner_jobs_number`,\n`group_genpartner_info/partner_program`,\n`group_genpartner_info/indicate_genpartner`,\n`group_child_care_arrangements/childcare_types`,\n`group_child_care_arrangements/childcare_types/nanny_home`,\n`group_child_care_arrangements/childcare_types/nanny_nothome`,\n`group_child_care_arrangements/childcare_types/relative`,\n`group_child_care_arrangements/childcare_types/childcare`,\n`group_child_care_arrangements/childcare_types/none`,\n`group_child_care_arrangements/childcare_location`,\n`group_child_care_arrangements/childcare_hours`,\n`group_child_care_arrangements/childcare_number`,\n`group_child_care_arrangements/childcare_age`,\n`group_child_care_arrangements/childcare_language`,\n`group_inclusioncheck/inclusionreason`,\n`group_inclusioncheck/indicate_inclusion`, indicate_demoquestionnaire,\nindicate_databrary, `_id`)`\nJoining with `by = join_by(start, end, c_today, update_date, site_id,\nsubject_number, state, check_childage, check_childage_weeks, child_sex, day,\nday2, day1, language_spoken_child, `language_spoken_child/english`,\n`language_spoken_child/spanish`, `language_spoken_child/other`,\nlanguage_spoken_child_other, `child_information/child_bornonduedate`,\n`child_information/child_onterm`, `child_information/child_duedate`,\n`child_information/child_birthage`, `child_information/child_weight_pounds`,\n`child_information/child_weight_ounces`,\n`child_information/child_birth_complications`,\n`child_information/specify_birth_complications`,\n`child_information/hearing_disabilities`, `child_information/specify_hearing`,\n`child_information/vision_disabilities`, `child_information/specify_vision`,\n`child_information/major_illnesses_injuries`,\n`child_information/specify_illnesses_injuries`,\n`child_information/child_sleep_time`, `child_information/child_wake_time`,\n`child_information/child_nap_hours`, `child_information/child_sleep_location`,\n`child_information/specify_child_sleep_location`,\n`child_information/indicate_child`, `child_information/indicate_child_2`,\n`group_family_structure/household_members`,\n`group_family_structure/household_members/male_partner`,\n`group_family_structure/household_members/female_partner`,\n`group_family_structure/household_members/other_partner`,\n`group_family_structure/household_members/grandmother`,\n`group_family_structure/household_members/grandfather`,\n`group_family_structure/household_members/great_grandmother`,\n`group_family_structure/household_members/great_grandfather`,\n`group_family_structure/household_members/aunt`,\n`group_family_structure/household_members/uncle`,\n`group_family_structure/household_members/cousin`,\n`group_family_structure/household_members/relative`,\n`group_family_structure/household_members/non_relative`,\n`group_family_structure/other_relatives`,\n`group_family_structure/other_non_relatives`,\n`group_family_structure/indicate_familystructure`,\n`group_child_care_arrangements/childcare_types`,\n`group_child_care_arrangements/childcare_types/relative`,\n`group_child_care_arrangements/childcare_types/childcare`,\n`group_child_care_arrangements/childcare_types/none`,\n`group_child_care_arrangements/childcare_hours`,\n`group_child_care_arrangements/childcare_number`,\n`group_child_care_arrangements/childcare_age`,\n`group_child_care_arrangements/childcare_language`, `_id`)`\n\n\n# A tibble: 934 × 162\n   start   end   c_today update_date site_id subject_number state check_childage\n   &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt;          &lt;chr&gt; &lt;chr&gt;         \n 1 2020-0… 2020… 2020-0… &lt;NA&gt;        NYUNI   230            New … 32.6772408503…\n 2 2020-0… 2020… 2020-0… &lt;NA&gt;        NYUNI   229            New … 32.3813828621…\n 3 2019-1… 2020… 2020-0… &lt;NA&gt;        VCOMU   002            VA    26.7258382642…\n 4 2020-0… 2020… 2020-0… &lt;NA&gt;        GEORG   010            Virg… 12.7547666009…\n 5 2020-0… 2020… 2020-0… &lt;NA&gt;        NYUNI   008            New … 13.4122287968…\n 6 2020-0… 2020… 2020-0… &lt;NA&gt;        NYUNI   009            New … 19.3636313828…\n 7 2020-0… 2020… 2020-0… &lt;NA&gt;        GEORG   011            Virg… 17.8514683322…\n 8 2020-0… 2020… 2020-0… &lt;NA&gt;        NYUNI   010            NY    17.8514683322…\n 9 2020-0… 2020… 2020-0… &lt;NA&gt;        NYUNI   011            New … 23.8001314924…\n10 2020-0… 2020… 2020-0… &lt;NA&gt;        VCOMU   003            VA    17.5884834538…\n# ℹ 924 more rows\n# ℹ 154 more variables: check_childage_weeks &lt;chr&gt;, child_sex &lt;chr&gt;, day &lt;chr&gt;,\n#   day2 &lt;chr&gt;, day1 &lt;chr&gt;, play_id &lt;chr&gt;, language_spoken_mom &lt;chr&gt;,\n#   `language_spoken_mom/english` &lt;chr&gt;, `language_spoken_mom/spanish` &lt;chr&gt;,\n#   `language_spoken_mom/other` &lt;chr&gt;, language_spoken_mom_other &lt;chr&gt;,\n#   language_spoken_child &lt;chr&gt;, `language_spoken_child/english` &lt;chr&gt;,\n#   `language_spoken_child/spanish` &lt;chr&gt;, …\n\n\n\n\n\nNow, we can proceed to clean-up the merged data frame. The sequence of functions called below cleans ‘construct-specific’ variables as indicated by the function names.\n\nscr_df &lt;- scr_df |&gt; \n    screen_clean_child_info() |&gt;\n    screen_clean_lang_info() |&gt;\n    screen_clean_mom_info() |&gt;\n    screen_clean_biodad_father_info() |&gt;\n    screen_clean_childcare_info() |&gt;\n    screen_clean_family_structure() |&gt;\n    screen_clean_play_id() |&gt;\n    screen_remove_selected_cols() |&gt;\n    screen_select_reorder_cols()\n\nFor convenience, we package this sequence in its own function, screen_clean_fields().\n\n\n\n\n\n\nNote\n\n\n\nNote that all of the variables are considered character strings. The tidyverse suite does a great job of guessing what variables are what, but sometimes it guesses wrongly. So, in preliminary stages, it has proved easier to make everything a character string.\n\n\n\nscr_df &lt;- screen_clean_fields(scr_df)\n\nLoading required package: tidyr\n\nstr(scr_df)\n\ntibble [934 × 51] (S3: tbl_df/tbl/data.frame)\n $ submit_date                       : chr [1:934] \"2020-02-27T08:24:10.551-05:00\" \"2020-02-27T08:43:34.275-05:00\" \"2019-12-18T16:37:17.554-05:00\" \"2020-01-01T12:54:04.550-05:00\" ...\n $ site_id                           : chr [1:934] \"NYUNI\" \"NYUNI\" \"VCOMU\" \"GEORG\" ...\n $ participant_ID                    : chr [1:934] \"230\" \"229\" \"002\" \"010\" ...\n $ play_id                           : chr [1:934] NA NA NA NA ...\n $ child_age_mos                     : chr [1:934] \"32.677240850317695\" \"32.38138286215201\" \"26.725838264299803\" \"12.754766600920446\" ...\n $ child_sex                         : chr [1:934] \"male\" \"female\" \"female\" \"male\" ...\n $ child_bornonduedate               : chr [1:934] \"yes\" \"yes\" \"yes\" \"yes\" ...\n $ child_onterm                      : chr [1:934] NA NA NA NA ...\n $ child_birthage                    : chr [1:934] \"-7\" \"-10\" \"0\" \"1\" ...\n $ child_weight_pounds               : chr [1:934] \"8\" \"7\" \"6\" \"7\" ...\n $ child_weight_ounces               : chr [1:934] \"12\" \"10\" \"12\" \"15\" ...\n $ child_birth_complications         : chr [1:934] \"no\" \"no\" \"no\" \"no\" ...\n $ child_birth_complications_specify : chr [1:934] NA NA NA NA ...\n $ child_hearing_disabilities        : chr [1:934] \"yes\" \"no\" \"no\" \"no\" ...\n $ child_hearing_disabilities_specify: chr [1:934] \"Temporary hearing loss so tubes in his ears, one still remaining\" NA NA NA ...\n $ child_vision_disabilities         : chr [1:934] \"no\" \"no\" \"no\" \"no\" ...\n $ child_vision_disabilities_specify : chr [1:934] NA NA NA NA ...\n $ child_major_illnesses_injuries    : chr [1:934] \"yes\" \"no\" \"no\" \"no\" ...\n $ child_illnesses_injuries_specify  : chr [1:934] \"Pneumonia at 5 months\" \"\" \"\" \"\" ...\n $ child_developmentaldelays         : chr [1:934] NA NA NA NA ...\n $ child_developmentaldelays_specify : chr [1:934] NA NA NA NA ...\n $ child_sleep_time                  : chr [1:934] \"20:15:00.000-05:00\" \"20:15:00.000-05:00\" \"19:00:00.000-05:00\" \"19:00:00.000-05:00\" ...\n $ child_wake_time                   : chr [1:934] \"07:15:00.000-05:00\" \"06:45:00.000-05:00\" \"07:30:00.000-05:00\" \"06:15:00.000-05:00\" ...\n $ child_nap_hours                   : chr [1:934] \"2\" \"3\" \"1.5\" \"2\" ...\n $ child_sleep_location              : chr [1:934] \"crib_separate\" \"crib_separate\" \"crib_separate\" \"crib_separate\" ...\n $ mom_bio                           : chr [1:934] \"yes\" \"yes\" \"yes\" \"yes\" ...\n $ mom_childbirth_age                : chr [1:934] \"33.41\" \"38.84\" \"32.2\" \"30.38\" ...\n $ mom_race                          : chr [1:934] \"white\" \"white\" \"white\" \"white\" ...\n $ mom_birth_country                 : chr [1:934] \"unitedstates\" \"unitedstates\" \"unitedstates\" \"unitedstates\" ...\n $ mom_birth_country_specify         : chr [1:934] \"\" \"\" \"\" \"\" ...\n $ mom_education                     : chr [1:934] \"masters\" \"doctorate\" \"doctorate\" \"masters\" ...\n $ mom_employment                    : chr [1:934] \"full_time\" \"full_time\" \"full_time\" \"full_time\" ...\n $ mom_occupation                    : chr [1:934] \"Architect\" \"Spanish teacher\" \"Nurse instructor\" \"School Psychologist\" ...\n $ mom_jobs_number                   : chr [1:934] \"1\" \"1\" \"1\" \"1\" ...\n $ mom_training                      : chr [1:934] \"no\" \"no\" \"no\" \"no\" ...\n $ biodad_childbirth_age             : chr [1:934] \"33.85_NA\" \"30.42_NA\" \"37.32_NA\" \"30.53_NA\" ...\n $ biodad_race                       : chr [1:934] \"white_NA\" \"white_NA\" \"NA_NA\" \"NA_NA\" ...\n $ language_spoken_mom               : chr [1:934] \"english\" \"english spanish\" \"english\" \"english\" ...\n $ language_spoken_mom_comments      : chr [1:934] NA NA NA NA ...\n $ language_spoken_child             : chr [1:934] \"english\" \"spanish\" \"english\" \"english\" ...\n $ language_spoken_home_comments     : chr [1:934] \"FALSE_47706996\" \"TRUE_47707423\" \"FALSE_43397823\" \"FALSE_44074192\" ...\n $ language_spoken_child_comments    : chr [1:934] NA NA NA NA ...\n $ language_spoken_home              : chr [1:934] \"english\" \"english spanish\" \"english\" \"english\" ...\n $ language_spoken_house_other       : chr [1:934] NA NA NA NA ...\n $ language_spoken_home_other        : chr [1:934] NA NA NA NA ...\n $ childcare_types                   : chr [1:934] NA NA NA NA ...\n $ childcare_location                : chr [1:934] NA NA NA NA ...\n $ childcare_hours                   : chr [1:934] NA NA NA NA ...\n $ childcare_number                  : chr [1:934] NA NA NA NA ...\n $ childcare_age                     : chr [1:934] NA NA NA NA ...\n $ childcare_language                : chr [1:934] NA NA NA NA ...\n\n\nThere is more work to do, but we have a version worth exporting.\n\n\n\nLet’s add the Databrary volume ID info.\n\nscr_df &lt;- scr_df |&gt;\n  screen_add_db_vol_id()\n\nThen filter out rows that do not have valid volume IDs.\n\nvalid_db_vol &lt;- !is.na(scr_df$vol_id)\n\nscr_df &lt;- scr_df[valid_db_vol,]\n\nThere are n=925 valid Databrary volume IDs out of a total of n=934 screening records.\nNext, we add a play_status field based on the group-name field from Databrary. We use group-name for indicating “Gold”, “Silver”, or “Not run.”\nTwo targets in _targets.R are relevant for this operation:\n  tar_target(\n    play_vols_df,\n    readr::read_csv(\"data/csv/_meta/play_site_vols.csv\",\n                    show_col_types = FALSE)\n  ),\n  tar_target(\n    databrary_session_csvs,\n    purrr::map(play_vols_df$site_id, databrary_get_save_session_csv),\n    cue = tarchetypes::tar_cue_age(\n      name = databrary_session_csvs,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  )\n\nThese targets generate site-specific CSVs in data/csv/site_sessions based on the database of PLAY sites contained in data/csv/_meta/play_site_vols.csv. We load these CSVs into a single data frame.\n\n\n\nsession_fns &lt;-\n  list.files(\"../data/csv/site_sessions\", \"\\\\.csv$\", full.names = TRUE)\n\ndf_sessions &lt;-\n  purrr::map(\n    session_fns,\n    readr::read_csv,\n    col_types = readr::cols(.default = 'c'),\n    show_col_types = FALSE\n  ) |&gt;\n  purrr::list_rbind()\n\nThe group_name variable contains status information about the sessions.\n\nxtabs(~ group_name, data=df_sessions)\n\ngroup_name\n   No visit    No_visit    No_Visit   PLAY_Gold PLAY_Silver \n          1          38          86         613         112 \n\n\nWe note that there are three different versions of no visit: “No visit”, “No_visit”, and “No_Visit”. In addition, there are n=54 sessions with NA in the group_name.\nLet’s modify those values that specify no visit on one of these forms to conform with one another.\n\ndf_sessions &lt;- df_sessions |&gt;\n  dplyr::mutate(group_name = stringr::str_replace(group_name, \"No.*isit\", \"No_visit\"))\n\nThese could be sessions that are still in QA or which are scheduled, or there could be some other anomaly. Here, we want to select only those sessions that occurred and which have passed QA–those sessions for which group_name is either ‘PLAY_Gold’ or ‘PLAY_Silver’.\n\ndf_sessions &lt;- df_sessions |&gt;\n  dplyr::filter(stringr::str_detect(group_name, \"PLAY_\"))\n\n\n\n\nHere is information about the sharing status.\n\nxtabs(~ group_name + session_release, df_sessions)\n\n             session_release\ngroup_name    EXCERPTS PRIVATE SHARED\n  PLAY_Gold        481       0    132\n  PLAY_Silver       81       4     27\n\n\nThere was one session marked PRIVATE.\n\ndf_sessions |&gt;\n  dplyr::filter(session_release == \"PRIVATE\") |&gt;\n  dplyr::select(vol_id, session_id, session_name, group_name)\n\n# A tibble: 4 × 4\n  vol_id session_id session_name   group_name \n  &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;          &lt;chr&gt;      \n1 1656   70116      PLAY_ASUNI_001 PLAY_Silver\n2 979    66932      PLAY_PRINU_024 PLAY_Silver\n3 1397   70234      PLAY_UHOUS_035 PLAY_Silver\n4 1422   72657      PLAY_UIOWA_025 PLAY_Silver\n\n\nNow, we join the screening data with the Databrary session data.\n\nscreen_datab_df &lt;- dplyr::left_join(df_sessions, scr_df, by = c('vol_id', 'participant_ID'))\n\nLet’s do some additional cleaning of redundant column names, e.g., exclusion.\n\nscreen_datab_df &lt;- screen_datab_df |&gt;\n  tidyr::unite(exclusion_reason, c(\"exclusion1_reason\", \"exclusion2_reason\", \"exclusion_reason\")) |&gt;\n  dplyr::mutate(exclusion_reason = stringr::str_remove_all(exclusion_reason, \"NA|_\"))\n\n\n\n\n\nWe date-stamp the exported file so we can monitor progress as this workflow develops.\n\nsfn &lt;- paste0(\"PLAY-screening-datab-\", Sys.Date(), \".csv\")\nreadr::write_csv(screen_datab_df, file.path(here::here(), \"data/csv/screening/agg/\", sfn))\n\nWe also save a copy with “latest”.\n\nsfn &lt;- \"PLAY-screening-datab-latest.csv\"\nreadr::write_csv(screen_datab_df, file.path(here::here(), \"data/csv/screening/agg/\", sfn))"
  },
  {
    "objectID": "screening-clean.html#merge",
    "href": "screening-clean.html#merge",
    "title": "Screening: Cleaning",
    "section": "",
    "text": "Let’s add the Databrary volume ID info.\n\nscr_df &lt;- scr_df |&gt;\n  screen_add_db_vol_id()\n\nThen filter out rows that do not have valid volume IDs.\n\nvalid_db_vol &lt;- !is.na(scr_df$vol_id)\n\nscr_df &lt;- scr_df[valid_db_vol,]\n\nThere are n=925 valid Databrary volume IDs out of a total of n=934 screening records.\nNext, we add a play_status field based on the group-name field from Databrary. We use group-name for indicating “Gold”, “Silver”, or “Not run.”\nTwo targets in _targets.R are relevant for this operation:\n  tar_target(\n    play_vols_df,\n    readr::read_csv(\"data/csv/_meta/play_site_vols.csv\",\n                    show_col_types = FALSE)\n  ),\n  tar_target(\n    databrary_session_csvs,\n    purrr::map(play_vols_df$site_id, databrary_get_save_session_csv),\n    cue = tarchetypes::tar_cue_age(\n      name = databrary_session_csvs,\n      age = as.difftime(update_interval, units = update_interval_units)\n    )\n  )\n\nThese targets generate site-specific CSVs in data/csv/site_sessions based on the database of PLAY sites contained in data/csv/_meta/play_site_vols.csv. We load these CSVs into a single data frame.\n\n\n\nsession_fns &lt;-\n  list.files(\"../data/csv/site_sessions\", \"\\\\.csv$\", full.names = TRUE)\n\ndf_sessions &lt;-\n  purrr::map(\n    session_fns,\n    readr::read_csv,\n    col_types = readr::cols(.default = 'c'),\n    show_col_types = FALSE\n  ) |&gt;\n  purrr::list_rbind()\n\nThe group_name variable contains status information about the sessions.\n\nxtabs(~ group_name, data=df_sessions)\n\ngroup_name\n   No visit    No_visit    No_Visit   PLAY_Gold PLAY_Silver \n          1          38          86         613         112 \n\n\nWe note that there are three different versions of no visit: “No visit”, “No_visit”, and “No_Visit”. In addition, there are n=54 sessions with NA in the group_name.\nLet’s modify those values that specify no visit on one of these forms to conform with one another.\n\ndf_sessions &lt;- df_sessions |&gt;\n  dplyr::mutate(group_name = stringr::str_replace(group_name, \"No.*isit\", \"No_visit\"))\n\nThese could be sessions that are still in QA or which are scheduled, or there could be some other anomaly. Here, we want to select only those sessions that occurred and which have passed QA–those sessions for which group_name is either ‘PLAY_Gold’ or ‘PLAY_Silver’.\n\ndf_sessions &lt;- df_sessions |&gt;\n  dplyr::filter(stringr::str_detect(group_name, \"PLAY_\"))\n\n\n\n\nHere is information about the sharing status.\n\nxtabs(~ group_name + session_release, df_sessions)\n\n             session_release\ngroup_name    EXCERPTS PRIVATE SHARED\n  PLAY_Gold        481       0    132\n  PLAY_Silver       81       4     27\n\n\nThere was one session marked PRIVATE.\n\ndf_sessions |&gt;\n  dplyr::filter(session_release == \"PRIVATE\") |&gt;\n  dplyr::select(vol_id, session_id, session_name, group_name)\n\n# A tibble: 4 × 4\n  vol_id session_id session_name   group_name \n  &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;          &lt;chr&gt;      \n1 1656   70116      PLAY_ASUNI_001 PLAY_Silver\n2 979    66932      PLAY_PRINU_024 PLAY_Silver\n3 1397   70234      PLAY_UHOUS_035 PLAY_Silver\n4 1422   72657      PLAY_UIOWA_025 PLAY_Silver\n\n\nNow, we join the screening data with the Databrary session data.\n\nscreen_datab_df &lt;- dplyr::left_join(df_sessions, scr_df, by = c('vol_id', 'participant_ID'))\n\nLet’s do some additional cleaning of redundant column names, e.g., exclusion.\n\nscreen_datab_df &lt;- screen_datab_df |&gt;\n  tidyr::unite(exclusion_reason, c(\"exclusion1_reason\", \"exclusion2_reason\", \"exclusion_reason\")) |&gt;\n  dplyr::mutate(exclusion_reason = stringr::str_remove_all(exclusion_reason, \"NA|_\"))"
  },
  {
    "objectID": "screening-clean.html#export-cleaned-file",
    "href": "screening-clean.html#export-cleaned-file",
    "title": "Screening: Cleaning",
    "section": "",
    "text": "We date-stamp the exported file so we can monitor progress as this workflow develops.\n\nsfn &lt;- paste0(\"PLAY-screening-datab-\", Sys.Date(), \".csv\")\nreadr::write_csv(screen_datab_df, file.path(here::here(), \"data/csv/screening/agg/\", sfn))\n\nWe also save a copy with “latest”.\n\nsfn &lt;- \"PLAY-screening-datab-latest.csv\"\nreadr::write_csv(screen_datab_df, file.path(here::here(), \"data/csv/screening/agg/\", sfn))"
  },
  {
    "objectID": "screening-viz.html",
    "href": "screening-viz.html",
    "title": "Screening survey: Visualizations",
    "section": "",
    "text": "These visualizations are intended as a way to test the integrity and utility of the data export and cleaning workflow.\n\n\n\nlibrary(targets)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(forcats)\n\n\nscreen_df &lt;- readr::read_csv(file.path(here::here(), \"data/csv/screening/agg/PLAY-screening-datab-latest.csv\"))\n\nRows: 766 Columns: 68\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (55): session_name, session_release, participant_ID, participant_gender...\ndbl   (9): session_id, vol_id, child_age_mos, child_birthage, child_weight_p...\nlgl   (1): pilot_pilot\ndttm  (1): submit_date\ndate  (2): session_date, participant_birthdate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\n(s &lt;- xtabs(~ session_release + group_name, screen_df))\n\n               group_name\nsession_release PLAY_Gold PLAY_Silver\n       EXCERPTS       499          87\n       PRIVATE          0           4\n       SHARED         146          30\n\n\nOf the n=766 sessions so far, 76.5% have agreed to EXCERPTS or “Learning Audiences” sharing. Conversely, only n=4 or 0.5% have declined to share at all.\n\n\n\nTo calculate cumulative screening/recruiting calls by site, we have to add an index variable\n\ndf &lt;- screen_df |&gt;\n  dplyr::arrange(submit_date) %&gt;%\n  dplyr::mutate(n_calls = seq_along(submit_date))\n\n\n\n\ndf |&gt;\n    dplyr::filter(!is.na(submit_date), !is.na(n_calls), !is.na(site_id)) %&gt;%\n    ggplot() +\n    aes(submit_date, n_calls, color = site_id) +\n    geom_point()\n\n\n\n\n\n\n\nFigure 1: Cumulative screening calls by year and site\n\n\n\n\n\n\n\n\n\ncalls_by_site_plot &lt;- function(df) {\n  df |&gt;\n    filter(!is.na(site_id)) %&gt;%\n    ggplot() +\n    aes(fct_infreq(site_id), fill = site_id) +\n    geom_bar() +\n    theme(axis.text.x = element_text(\n      angle = 90,\n      vjust = 0.5,\n      hjust = 1\n    )) + # Rotate text\n    labs(x = \"site\") +\n    theme(legend.position = \"none\")\n}\n\ncalls_by_site_plot(df)\n\n\n\n\n\n\n\nFigure 2: Cumulative screening calls by site\n\n\n\n\n\n\n\n\n\n\n\nChild age in months (child_age_mos) by child_sex.\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(child_age_mos), !is.na(child_sex)) |&gt;\n  ggplot() +\n  aes(child_age_mos, fill = child_sex) +\n  geom_histogram(bins = 50)\n\n\n\n\n\n\n\nFigure 3: Histogram of child age at time of recruiting call.\n\n\n\n\n\n\nSome of the code to clean the screen_df variables could be incorporated into an earlier stage of the workflow.\n\n\n\n\n\n\n\nLanguage(s) spoken to child by child_sex.\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(\n    language_spoken_child = stringr::str_replace_all(language_spoken_child, \" \", \"_\"),\n    language_spoken_home = stringr::str_replace_all(language_spoken_home, \" \", \"_\")\n  )\n\nxtabs(formula = ~ child_sex + language_spoken_child,\n      data = df)\n\n         language_spoken_child\nchild_sex english english_other english_spanish english_spanish_other spanish\n   female     310             2              55                     2      17\n   male       292             5              59                     1      15\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + language_spoken_home, data = df)\n\n         language_spoken_home\nchild_sex english english_other english_spanish english_spanish_other other\n   female     315             4              44                     1     1\n   male       278             4              70                     2     3\n         language_spoken_home\nchild_sex spanish\n   female      17\n   male        14\n\n\n\n\n\n\nxtabs(formula = ~ language_spoken_child + language_spoken_home, data = df)\n\n                       language_spoken_home\nlanguage_spoken_child   english english_other english_spanish\n  english                   570             3              20\n  english_other               2             5               0\n  english_spanish            17             0              84\n  english_spanish_other       2             0               1\n  spanish                     2             0               9\n                       language_spoken_home\nlanguage_spoken_child   english_spanish_other other spanish\n  english                                   2     2       4\n  english_other                             0     0       0\n  english_spanish                           1     2       6\n  english_spanish_other                     0     0       0\n  spanish                                   0     0      21\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_bornonduedate,\n      data = screen_df)\n\n         child_bornonduedate\nchild_sex  no yes\n   female   8 373\n   male     8 363\n\n\n\nThere are n=14 NAs.\n\n\nscreen_df |&gt;\n  dplyr::filter(is.na(child_bornonduedate)) |&gt;\n  dplyr::select(vol_id, participant_ID) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\nvol_id\nparticipant_ID\n\n\n\n\n1656\n001\n\n\n1008\n013\n\n\n1008\n013\n\n\n1008\n013\n\n\n1008\n013\n\n\n1576\n003\n\n\n1576\n006\n\n\n1481\n006\n\n\n954\n001\n\n\n1103\n001\n\n\n1596\n013\n\n\n1657\n003\n\n\n979\n026\n\n\n996\n015\n\n\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_bornonduedate + child_onterm,\n      data = screen_df)\n\n                   child_onterm\nchild_bornonduedate  no yes\n                no    1  15\n                yes   1 621\n\n\n\n\n\nMust convert pounds and ounces to decimal pounds.\n\ndf &lt;- screen_df %&gt;%\n  dplyr::mutate(.,\n                birth_weight_lbs = child_weight_pounds + child_weight_ounces/16)\n\ndf |&gt;\n  dplyr::filter(!is.na(birth_weight_lbs), !is.na(child_sex)) |&gt;\n  dplyr::filter(birth_weight_lbs &gt; 0) |&gt;\n  ggplot() +\n  aes(x = birth_weight_lbs, fill = child_sex) +\n  geom_histogram(binwidth = 0.33) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\nFigure 4\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_birth_complications,\n      data = screen_df)\n\n         child_birth_complications\nchild_sex  no yes\n   female 344  37\n   male   339  28\n\n\n\nThere are some first names in the child_birth_complications_specify field, so it is not shown here.\n\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(child_birth_complications_specify)) |&gt;\n  dplyr::select(child_age_mos, child_sex, child_birth_complications_specify) |&gt;\n  dplyr::arrange(child_age_mos) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_major_illnesses_injuries,\n      data = screen_df)\n\n         child_major_illnesses_injuries\nchild_sex  no yes\n   female 368  13\n   male   354  13\n\n\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(child_illnesses_injuries_specify),\n                !stringr::str_detect(child_illnesses_injuries_specify, \"OK\")) |&gt;\n  dplyr::select(child_age_mos, child_sex, child_illnesses_injuries_specify) |&gt;\n  dplyr::arrange(child_age_mos) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\nchild_age_mos\nchild_sex\nchild_illnesses_injuries_specify\n\n\n\n\n11.40697\nfemale\nCOVID in January, no later complications.\n\n\n11.86719\nfemale\nRSV when she 3 months; was in hospital for 2 nights\n\n\n12.68902\nfemale\nfractured wrist when she was 9 months\n\n\n12.72189\nfemale\nAt 2 months got RSV viral infection and was in hospital for 4 days. At 5 months feel off the bed and hit her head. Ended up in the emergency room but exams showed she was okay. Neither of these events resulted in any motor, perceptual, or cognitive impairment or delay as a result.\n\n\n12.73285\nmale\nHe had Covid once.\n\n\n12.76162\nfemale\nRSV when 10 weeks old, hospitalized for 1 week\n\n\n13.01775\nmale\nCovid in December but this did NOT result in a visual, auditory, motor, or cognitive disability according to mom\n\n\n13.02186\nmale\nRespiratory failure and sepsis after birth that was resolved\n\n\n16.17494\nfemale\nChild had a fall but she was fine.\n\n\n17.81860\nfemale\n**bit by tick a couple months ago, took meds to prevent Lyme disease\n\n\n17.88160\nmale\nCovid in November\n\n\n18.04597\nfemale\nbroke leg in April - all healed now. slide accident, she was 16 months. in a cast for three weeks, and then a week phantom limping.\n\n\n18.18020\nfemale\nRespiratory Syncytial Virus(RSV)\n\n\n18.67330\nmale\ntibial stress factor\n\n\n18.70617\nmale\nRSV but did not need to be admitted. This illness did not result in an impairment or disability.\n\n\n18.77055\nmale\nChild had COVID twice (fever, etc.)\n\n\n20.67856\nmale\nAnaphylactic reaction to peanuts\n\n\n22.48658\nfemale\nChild was born with a heart murmur- cardiologist said she is unaffected and will likely grow out of it. Child also had an isolated febrile seizure short after 1st birthday. Has not experienced a seizure since.\n\n\n23.01118\nmale\nHe had RSV then COVID around 13-14 months old, but they were both very mild. No complications arose from either.\n\n\n23.20979\nfemale\nfebrile seizure- around 1 1/2 years\n\n\n24.03024\nmale\nhad COVID at 7 months\n\n\n24.91782\nfemale\nShe had COVID, and when she was little had an cardiac issue (her heart was \"working\" too hard) but she was okay soon after (this was first 2-3 months after birth). March of 2021 she had fully recovered from this, and received treatment\n\n\n25.70814\nmale\nhospital day 4 for hypothermia - then negative / no diagnosis\n\n\n26.76008\nmale\nHas had a fall, was a concussion but not diagnosed with any disabilities\n\n\n32.67724\nmale\nPneumonia at 5 months\n\n\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_vision_disabilities,\n      data = screen_df)\n\n         child_vision_disabilities\nchild_sex  no yes\n   female 378   3\n   male   365   2\n\n\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(child_vision_disabilities_specify)) |&gt;\n  dplyr::select(child_age_mos, child_sex, child_vision_disabilities_specify) |&gt;\n  dplyr::arrange(child_age_mos) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\nchild_age_mos\nchild_sex\nchild_vision_disabilities_specify\n\n\n\n\n18.70617\nmale\nHe wears glasses to correct his far sighted vision. He does not have vision loss.\n\n\n18.90204\nfemale\nDuane's Syndrome in left eye\n\n\n22.35371\nfemale\nShe has a lazy eye, she wears an eye patch for part of the day.\n\n\n23.14267\nfemale\nStrabismus - wears glasses\n\n\n24.03024\nmale\nlazy eye but corrected\n\n\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_hearing_disabilities,\n      data = screen_df)\n\n         child_hearing_disabilities\nchild_sex  no yes\n   female 381   0\n   male   366   1\n\n\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(child_hearing_disabilities_specify)) |&gt;\n  dplyr::select(child_age_mos, child_sex, child_hearing_disabilities_specify) |&gt;\n  dplyr::arrange(child_age_mos) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\nchild_age_mos\nchild_sex\nchild_hearing_disabilities_specify\n\n\n\n\n32.67724\nmale\nTemporary hearing loss so tubes in his ears, one still remaining\n\n\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_developmentaldelays,\n      data = screen_df)\n\n         child_developmentaldelays\nchild_sex  no yes\n   female 315   3\n   male   307   5\n\n\n\nThere may be first names in the child_developmentaldelays_specify field, so it is not shown here.\n\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(child_developmentaldelays_specify)) |&gt;\n  dplyr::select(child_age_mos, child_sex, child_developmentaldelays_specify) |&gt;\n  dplyr::arrange(child_age_mos) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\n\nThis is work yet-to-be-done. The time stamps need to be reformatted prior to visualization.\n\n\n\n\nextract_sleep_hr &lt;- function(t) {\n  t |&gt;\n    stringr::str_extract(\"^[0-9]{2}\\\\:[0-9]{2}\\\\:[0-9]{2}\") |&gt;\n    hms::as_hms()\n}\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(child_sleep_time = extract_sleep_hr(child_sleep_time)) |&gt;\n  dplyr::filter(!is.na(child_sleep_time)) \n\ndf |&gt;\n  dplyr::filter(!is.na(child_sleep_time),\n                !is.na(child_sex)) |&gt;\n  ggplot() +\n  aes(child_sleep_time, fill = child_sex) +\n  geom_histogram(bins = 18) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\nFigure 5\n\n\n\n\n\nSome of the bed times are probably not in correct 24 hr time.\n\ndf |&gt;\n  dplyr::filter(child_sleep_time &lt; hms::as_hms(\"16:00:00\")) |&gt;\n  dplyr::select(site_id, participant_ID, child_sleep_time) |&gt;\n  dplyr::arrange(site_id, participant_ID) |&gt;\n  knitr::kable('html')\n\n\n\n\nsite_id\nparticipant_ID\nchild_sleep_time\n\n\n\n\nCSUFL\n013\n07:00:00\n\n\nCSULB\n006\n07:30:00\n\n\nINDNA\n004\n09:00:00\n\n\nINDNA\n006\n07:45:00\n\n\nNYUNI\n082\n07:00:00\n\n\nOHIOS\n002\n10:00:00\n\n\nPRINU\n001\n12:15:00\n\n\nPRINU\n018\n07:30:00\n\n\nPRINU\n027\n07:30:00\n\n\nPRINU\n043\n08:15:00\n\n\nPURDU\n020\n08:30:00\n\n\nPURDU\n021\n11:30:00\n\n\nUCSCR\n011\n07:30:00\n\n\nUGEOR\n016\n07:30:00\n\n\nUPITT\n013\n08:15:00\n\n\nUPITT\n016\n00:30:00\n\n\nUTAUS\n023\n08:00:00\n\n\n\n\n\n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(child_wake_time = extract_sleep_hr(child_wake_time)) |&gt;\n  dplyr::filter(!is.na(child_wake_time)) \n\ndf |&gt;\n  dplyr::filter(!is.na(child_wake_time),\n                !is.na(child_sex)) |&gt;\n  ggplot() +\n  aes(child_wake_time, fill = child_sex) +\n  geom_histogram(bins = 18) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\nFigure 6\n\n\n\n\n\nThere are some unusual wake times, too.\n\ndf |&gt;\n  dplyr::filter(child_wake_time &gt; hms::as_hms(\"16:00:00\")) |&gt;\n  dplyr::select(site_id, participant_ID, child_wake_time) |&gt;\n  dplyr::arrange(site_id, participant_ID) |&gt;\n  knitr::kable('html')\n\n\n\n\nsite_id\nparticipant_ID\nchild_wake_time\n\n\n\n\nBOSTU\n001\n19:30:00\n\n\nCHOPH\n017\n19:30:00\n\n\nGEORG\n026\n19:00:00\n\n\nOHIOS\n009\n18:30:00\n\n\nOHIOS\n012\n19:30:00\n\n\nOHIOS\n014\n18:30:00\n\n\nOHIOS\n018\n18:45:00\n\n\nOHIOS\n019\n19:30:00\n\n\nOHIOS\n021\n19:30:00\n\n\nOHIOS\n029\n19:30:00\n\n\nOHIOS\n031\n19:30:00\n\n\nOHIOS\n035\n19:00:00\n\n\nOHIOS\n062\n18:30:00\n\n\nPRINU\n015\n19:00:00\n\n\nPRINU\n018\n19:45:00\n\n\nPRINU\n027\n20:00:00\n\n\nPRINU\n043\n19:00:00\n\n\nPURDU\n020\n21:30:00\n\n\nPURDU\n021\n23:30:00\n\n\nPURDU\n023\n23:00:00\n\n\nUALAB\n009\n18:00:00\n\n\nUCRIV\n007\n18:00:00\n\n\nUCSCR\n035\n18:30:00\n\n\nUGEOR\n002\n19:30:00\n\n\nUHOUS\n014\n19:00:00\n\n\nUMIAM\n013\n20:00:00\n\n\nUMIAM\n029\n19:30:00\n\n\nUTAUS\n013\n18:00:00\n\n\nUTAUS\n020\n18:30:00\n\n\nUTAUS\n040\n19:00:00\n\n\nUTAUS\n043\n19:15:00\n\n\nVBLTU\n025\n19:15:00\n\n\n\n\n\n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(child_sleep_time = extract_sleep_hr(child_sleep_time),\n                  child_wake_time = extract_sleep_hr(child_wake_time)) |&gt;\n  dplyr::filter(!is.na(child_sleep_time),\n                !is.na(child_wake_time)) |&gt;\n  dplyr::mutate(child_sleep_secs = (child_sleep_time - child_wake_time))\n\ndf |&gt;\n  dplyr::filter(!is.na(child_sleep_secs)) |&gt;\n  ggplot() +\n  aes(child_sleep_secs, fill = child_sex) +\n  geom_histogram(bins = 18) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\nDon't know how to automatically pick scale for object of type &lt;difftime&gt;.\nDefaulting to continuous.\n\n\n\n\n\n\n\n\nFigure 7\n\n\n\n\n\nAgain, there are some unusual values.\n\ndf |&gt;\n  dplyr::filter(child_sleep_secs &lt; 12000) |&gt;\n  dplyr::select(site_id, participant_ID, child_sleep_time, child_wake_time, child_sleep_secs) |&gt;\n  dplyr::arrange(site_id, participant_ID) |&gt;\n  knitr::kable('html')\n\n\n\n\nsite_id\nparticipant_ID\nchild_sleep_time\nchild_wake_time\nchild_sleep_secs\n\n\n\n\nBOSTU\n001\n19:30:00\n19:30:00\n0 secs\n\n\nCHOPH\n017\n20:45:00\n19:30:00\n4500 secs\n\n\nCSUFL\n013\n07:00:00\n06:00:00\n3600 secs\n\n\nCSULB\n006\n07:30:00\n07:30:00\n0 secs\n\n\nGEORG\n026\n19:45:00\n19:00:00\n2700 secs\n\n\nINDNA\n004\n09:00:00\n08:00:00\n3600 secs\n\n\nINDNA\n006\n07:45:00\n06:30:00\n4500 secs\n\n\nNYUNI\n082\n07:00:00\n06:15:00\n2700 secs\n\n\nOHIOS\n002\n10:00:00\n08:00:00\n7200 secs\n\n\nOHIOS\n009\n18:30:00\n18:30:00\n0 secs\n\n\nOHIOS\n012\n20:00:00\n19:30:00\n1800 secs\n\n\nOHIOS\n014\n20:00:00\n18:30:00\n5400 secs\n\n\nOHIOS\n018\n20:00:00\n18:45:00\n4500 secs\n\n\nOHIOS\n019\n20:30:00\n19:30:00\n3600 secs\n\n\nOHIOS\n021\n20:00:00\n19:30:00\n1800 secs\n\n\nOHIOS\n029\n20:45:00\n19:30:00\n4500 secs\n\n\nOHIOS\n031\n20:30:00\n19:30:00\n3600 secs\n\n\nOHIOS\n035\n20:30:00\n19:00:00\n5400 secs\n\n\nOHIOS\n062\n20:30:00\n18:30:00\n7200 secs\n\n\nPRINU\n015\n19:00:00\n19:00:00\n0 secs\n\n\nPRINU\n018\n07:30:00\n19:45:00\n-44100 secs\n\n\nPRINU\n027\n07:30:00\n20:00:00\n-45000 secs\n\n\nPRINU\n043\n08:15:00\n19:00:00\n-38700 secs\n\n\nPURDU\n020\n08:30:00\n21:30:00\n-46800 secs\n\n\nPURDU\n021\n11:30:00\n23:30:00\n-43200 secs\n\n\nPURDU\n023\n22:30:00\n23:00:00\n-1800 secs\n\n\nUALAB\n009\n19:30:00\n18:00:00\n5400 secs\n\n\nUCRIV\n007\n21:00:00\n18:00:00\n10800 secs\n\n\nUCSCR\n011\n07:30:00\n06:30:00\n3600 secs\n\n\nUCSCR\n035\n20:45:00\n18:30:00\n8100 secs\n\n\nUGEOR\n002\n20:00:00\n19:30:00\n1800 secs\n\n\nUGEOR\n016\n07:30:00\n08:00:00\n-1800 secs\n\n\nUHOUS\n014\n19:00:00\n19:00:00\n0 secs\n\n\nUMIAM\n013\n21:00:00\n20:00:00\n3600 secs\n\n\nUMIAM\n029\n20:00:00\n19:30:00\n1800 secs\n\n\nUPITT\n013\n08:15:00\n07:15:00\n3600 secs\n\n\nUPITT\n016\n00:30:00\n11:00:00\n-37800 secs\n\n\nUTAUS\n013\n19:30:00\n18:00:00\n5400 secs\n\n\nUTAUS\n020\n20:00:00\n18:30:00\n5400 secs\n\n\nUTAUS\n023\n08:00:00\n07:00:00\n3600 secs\n\n\nUTAUS\n040\n19:00:00\n19:00:00\n0 secs\n\n\nUTAUS\n043\n22:00:00\n19:15:00\n9900 secs\n\n\nVBLTU\n025\n19:30:00\n19:15:00\n900 secs\n\n\n\n\n\n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(child_nap_hours = as.numeric(child_nap_hours)) |&gt;\n  dplyr::filter(!is.na(child_sleep_time)) \n\nWarning: There was 1 warning in `dplyr::mutate()`.\nℹ In argument: `child_nap_hours = as.numeric(child_nap_hours)`.\nCaused by warning:\n! NAs introduced by coercion\n\ndf |&gt;\n  dplyr::filter(!is.na(child_nap_hours),\n                !is.na(child_sex)) |&gt;\n  ggplot() +\n  aes(child_nap_hours, fill = child_sex) +\n  geom_histogram(bins = 18) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\nFigure 8\n\n\n\n\n\nAnd there are some very long nappers or null values we need to capture.\n\ndf |&gt;\n  dplyr::filter(child_nap_hours &gt; 5) |&gt;\n  dplyr::select(site_id, participant_ID, child_nap_hours) |&gt;\n  dplyr::arrange(site_id, participant_ID) |&gt;\n  knitr::kable('html')\n\n\n\n\nsite_id\nparticipant_ID\nchild_nap_hours\n\n\n\n\nUMIAM\n003\n8\n\n\nUOREG\n012\n6\n\n\nUTAUS\n009\n6\n\n\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_sleep_location,\n      data = screen_df)\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + mom_bio,\n      data = screen_df)\n\n         mom_bio\nchild_sex no_adoptive no_partnerchild yes\n   female           2               1 364\n   male             0               0 362\n\n\n\n\n\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(mom_childbirth_age), !is.na(child_sex)) |&gt;\n  ggplot() +\n  aes(x = mom_childbirth_age, fill = child_sex) +\n  geom_histogram(bins = 25) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\nFigure 9\n\n\n\n\n\nClearly, there are some impossible (erroneous) maternal ages &gt; 100. Here are details:\n\nold_moms &lt;- screen_df |&gt;\n  dplyr::filter(mom_childbirth_age &gt; 55)\n\nold_moms |&gt;\n  dplyr::select(submit_date, vol_id, participant_ID, mom_childbirth_age) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\nsubmit_date\nvol_id\nparticipant_ID\nmom_childbirth_age\n\n\n\n\n2022-07-07 15:03:20\n1391\n005\n121.22\n\n\n\n\n\n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(mom_race)) |&gt;\n  dplyr::mutate(mom_race = dplyr::recode(\n    mom_race,\n    morethanone = \"more_than_one\",\n    americanindian = \"american_indian\"))\n\nxtabs(~mom_race, df)\n\nmom_race\namerican_indian           asian           black   more_than_one           other \n              3              25              34              42              45 \n        refused           white \n              2             591 \n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(mom_birth_country = dplyr::recode(\n    mom_birth_country, \n    unitedstates = \"US\",\n    united_states = \"US\",\n    othercountry = \"Other\",\n    other_country = \"Other\",\n    refused = \"Refused\"\n  ))\n\nxtabs(~ mom_birth_country, data = df)\n\nmom_birth_country\n     Other puertorico         US \n        86          3        653 \n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(mom_birth_country_specify = stringr::str_to_title(mom_birth_country_specify)) |&gt;\n  dplyr::filter(!is.na(mom_birth_country_specify)) |&gt;\n  dplyr::select(child_sex, mom_birth_country_specify)\n\nunique(df$mom_birth_country_specify)\n\n [1] \"South Korea\"        \"Argentina\"          \"Spain\"             \n [4] \"Zimbabwe\"           \"Mexico\"             \"Canada\"            \n [7] \"Bolivia\"            \"Uk\"                 \"Refused\"           \n[10] \"United Kingdom\"     \"Liberia\"            \"Pakistan\"          \n[13] \"Australia\"          \"Venezuela\"          \"India\"             \n[16] \"Kenya\"              \"England\"            \"China\"             \n[19] \"Ireland\"            \"El Salvador\"        \"Colombia\"          \n[22] \"Chile\"              \"Haiti\"              \"Guatemala\"         \n[25] \"Ecuador\"            \"Costa Rica\"         \"Italy\"             \n[28] \"Malaysia\"           \"Phillipines\"        \"Dominican Republic\"\n[31] \"Nigeria\"            \"Honduras\"           \"Colomobia\"         \n[34] \"Columbia\"           \"Peru\"               \"Panama\"            \n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(mom_education)) |&gt;\n  dplyr::select(child_sex, mom_education)\n\nxtabs(~ mom_education, data = df)\n\nmom_education\n       associates    bachelor_s_deg         bachelors           diploma \n               25                 3               239                26 \n        doctorate          eleventh               ged graduate_nodegree \n               94                 1                 3                22 \n   master_s_degre           masters             ninth      professional \n                2               245                 1                35 \n   professional_d       somecollege       voc_diplima     voc_nodiplima \n                2                40                 2                 1 \n\n\n\nThis requires some recoding work.\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(mom_employment))\n\nxtabs(~ mom_employment, data = df)\n\nmom_employment\nfull_time        no part_time \n      428       165       148 \n\n\n\n\n\nThis information is available, but would need to be substantially recoded to be useful in summary form.\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(mom_jobs_number))\n\nxtabs(~ mom_jobs_number, data = df)\n\nmom_jobs_number\n    0     1     2     3     4 5more \n    1   512    59     1     1     1 \n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(mom_jobs_number),\n                !is.na(mom_employment))\n\nxtabs(~ mom_jobs_number + mom_employment, data = df)\n\n               mom_employment\nmom_jobs_number full_time part_time\n          0             0         1\n          1           391       121\n          2            34        25\n          3             1         0\n          4             1         0\n          5more         1         0\n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(mom_training))\n\nxtabs(~ mom_training, data = df)\n\nmom_training\n no yes \n722  17 \n\n\n\n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::select(biodad_childbirth_age, biodad_race, child_sex) |&gt;\n  dplyr::mutate(\n    biodad_race =\n      dplyr::recode(\n        biodad_race,\n        americanindian_NA = \"american_indian\",\n        asian_NA = \"asian\",\n        NA_asian = \"asian\",\n        black_NA = \"black\",\n        donotknow_NA = \"do_not_know\",\n        NA_NA = \"NA\",\n        NA_white = \"white\",\n        other_NA = \"other\",\n        refused_NA = \"refused\",\n        white_NA = \"white\",\n        morethanone_NA = \"more_than_one\"\n      )\n  ) |&gt;\n  dplyr::mutate(biodad_childbirth_age = stringr::str_remove_all(biodad_childbirth_age, \"[_NA]\")) |&gt;\n  # dplyr::filter(!is.na(biodad_childbirth_age), !is.na(biodad_race)) |&gt;\n  dplyr::mutate(biodad_childbirth_age = as.numeric(biodad_childbirth_age))\n\nWarning: There was 1 warning in `dplyr::mutate()`.\nℹ In argument: `biodad_childbirth_age = as.numeric(biodad_childbirth_age)`.\nCaused by warning:\n! NAs introduced by coercion\n\nxtabs(~ biodad_race, df)\n\nbiodad_race\n  american_indian             asian             black       do_not_know \n                4                26                42                 4 \n    more_than_one                NA nativehawaiian_NA             other \n               31                31                 1                62 \n          refused             white \n                3               556 \n\n\n\n\n\n\ndf |&gt;\n  dplyr::filter(!is.na(biodad_childbirth_age)) |&gt;\n  ggplot() +\n  aes(x = biodad_childbirth_age, fill = child_sex) +\n  geom_histogram(bins = 25) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\nFigure 10\n\n\n\n\n\n\n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(childcare_types))\n                \nxtabs(~ childcare_types, data = df)\n\nchildcare_types\n                        childcare                    childcare_cent \n                              208                                 2 \n                            nanny                    nanny_babysitt \n                                4                                 1 \n                       nanny_home              nanny_home childcare \n                               35                                12 \n         nanny_home nanny_nothome nanny_home nanny_nothome relative \n                                2                                 1 \n              nanny_home relative                     nanny_nothome \n                                6                                14 \n          nanny_nothome childcare            nanny_nothome relative \n                                3                                 1 \n                             none                          relative \n                              159                                87 \n               relative childcare \n                               19 \n\n\n\nThis requires some cleaning.\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(childcare_hours)) |&gt;\n  dplyr::arrange(childcare_hours)\n\nunique(df$childcare_hours)\n\n [1] \"1\"                                           \n [2] \"10\"                                          \n [3] \"12\"                                          \n [4] \"13\"                                          \n [5] \"14\"                                          \n [6] \"14.5\"                                        \n [7] \"15\"                                          \n [8] \"15-20\"                                       \n [9] \"16\"                                          \n[10] \"16-20\"                                       \n[11] \"17\"                                          \n[12] \"17.5\"                                        \n[13] \"18\"                                          \n[14] \"19\"                                          \n[15] \"2\"                                           \n[16] \"2-3\"                                         \n[17] \"2-4\"                                         \n[18] \"20\"                                          \n[19] \"20 hours\"                                    \n[20] \"20 hours a week - maternal grandmother\"      \n[21] \"21\"                                          \n[22] \"21 (14 hr childcare center, 7 hr babysitter)\"\n[23] \"22\"                                          \n[24] \"24\"                                          \n[25] \"25\"                                          \n[26] \"25, 15 of those hours are at daycare\"        \n[27] \"26\"                                          \n[28] \"27\"                                          \n[29] \"28\"                                          \n[30] \"3\"                                           \n[31] \"30\"                                          \n[32] \"30-35\"                                       \n[33] \"30-40\"                                       \n[34] \"31\"                                          \n[35] \"32\"                                          \n[36] \"33\"                                          \n[37] \"34\"                                          \n[38] \"35\"                                          \n[39] \"35-40\"                                       \n[40] \"36\"                                          \n[41] \"36; Grandpa watches one day a week\"          \n[42] \"37\"                                          \n[43] \"38\"                                          \n[44] \"4\"                                           \n[45] \"40\"                                          \n[46] \"40+\"                                         \n[47] \"40-45\"                                       \n[48] \"40-45 hours\"                                 \n[49] \"40-50\"                                       \n[50] \"42\"                                          \n[51] \"42.5\"                                        \n[52] \"43\"                                          \n[53] \"45\"                                          \n[54] \"45-50\"                                       \n[55] \"47\"                                          \n[56] \"5\"                                           \n[57] \"50\"                                          \n[58] \"52.5\"                                        \n[59] \"53\"                                          \n[60] \"6\"                                           \n[61] \"63\"                                          \n[62] \"7\"                                           \n[63] \"8\"                                           \n[64] \"8-16\"                                        \n[65] \"8-5 each day\"                                \n[66] \"80\"                                          \n[67] \"9\"                                           \n\n\n\nThis requires some cleaning.\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(childcare_language))\n\nunique(df$childcare_language)\n\n [1] \"Spanish and English (half and half)\"                                       \n [2] \"English\"                                                                   \n [3] \"Spanish\"                                                                   \n [4] \"English and Spanish (50/50)\"                                               \n [5] \"english\"                                                                   \n [6] \"English when speaking with children, but Arabic when speaking to eachother\"\n [7] \"Mostly English, some Spanish\"                                              \n [8] \"Mandarin\"                                                                  \n [9] \"Spanish at the center\"                                                     \n[10] \"English and Spanish\"                                                       \n[11] \"English, Spanish\"                                                          \n[12] \"Usually English, sometimes arabic and french\"                              \n[13] \"English and speaks a little bit of Japanese but not directly to Lucas\"     \n[14] \"English and Creole\"                                                        \n[15] \"Spanish (sometimes English)\"                                               \n[16] \"English;Spanish\"                                                           \n[17] \"Spanish and English\"                                                       \n[18] \"spanish\"                                                                   \n[19] \"French only\"                                                               \n[20] \"English and some sign language\"                                            \n[21] \"Engish\"                                                                    \n[22] \"English, American Sign Language\"                                           \n[23] \"English and ASL\"                                                           \n[24] \"Ingles\"                                                                    \n[25] \"English/Spanish\"                                                           \n[26] \"English and some Spanish\"                                                  \n[27] \"english, has been exposed to Arabic\"                                       \n[28] \"Nanny in Spanish at home. At school both English and Spanish.\"             \n[29] \"English (majority of the time) and sometimes Spanish\"                      \n[30] \"English and Spanish 50/50\"                                                 \n[31] \"english, some spanish\"                                                     \n[32] \"English, Italian, Spanish\"                                                 \n[33] \"English, sometimes a little bit of Spanish\"                                \n[34] \"English &  Spanish\"                                                        \n[35] \"English and Portuguese\"                                                    \n\n\n\nThis requires some cleaning."
  },
  {
    "objectID": "screening-viz.html#setup",
    "href": "screening-viz.html#setup",
    "title": "Screening survey: Visualizations",
    "section": "",
    "text": "library(targets)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(forcats)\n\n\nscreen_df &lt;- readr::read_csv(file.path(here::here(), \"data/csv/screening/agg/PLAY-screening-datab-latest.csv\"))\n\nRows: 766 Columns: 68\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (55): session_name, session_release, participant_ID, participant_gender...\ndbl   (9): session_id, vol_id, child_age_mos, child_birthage, child_weight_p...\nlgl   (1): pilot_pilot\ndttm  (1): submit_date\ndate  (2): session_date, participant_birthdate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "screening-viz.html#sharing-permission",
    "href": "screening-viz.html#sharing-permission",
    "title": "Screening survey: Visualizations",
    "section": "",
    "text": "(s &lt;- xtabs(~ session_release + group_name, screen_df))\n\n               group_name\nsession_release PLAY_Gold PLAY_Silver\n       EXCERPTS       499          87\n       PRIVATE          0           4\n       SHARED         146          30\n\n\nOf the n=766 sessions so far, 76.5% have agreed to EXCERPTS or “Learning Audiences” sharing. Conversely, only n=4 or 0.5% have declined to share at all."
  },
  {
    "objectID": "screening-viz.html#dates-times",
    "href": "screening-viz.html#dates-times",
    "title": "Screening survey: Visualizations",
    "section": "",
    "text": "To calculate cumulative screening/recruiting calls by site, we have to add an index variable\n\ndf &lt;- screen_df |&gt;\n  dplyr::arrange(submit_date) %&gt;%\n  dplyr::mutate(n_calls = seq_along(submit_date))\n\n\n\n\ndf |&gt;\n    dplyr::filter(!is.na(submit_date), !is.na(n_calls), !is.na(site_id)) %&gt;%\n    ggplot() +\n    aes(submit_date, n_calls, color = site_id) +\n    geom_point()\n\n\n\n\n\n\n\nFigure 1: Cumulative screening calls by year and site\n\n\n\n\n\n\n\n\n\ncalls_by_site_plot &lt;- function(df) {\n  df |&gt;\n    filter(!is.na(site_id)) %&gt;%\n    ggplot() +\n    aes(fct_infreq(site_id), fill = site_id) +\n    geom_bar() +\n    theme(axis.text.x = element_text(\n      angle = 90,\n      vjust = 0.5,\n      hjust = 1\n    )) + # Rotate text\n    labs(x = \"site\") +\n    theme(legend.position = \"none\")\n}\n\ncalls_by_site_plot(df)\n\n\n\n\n\n\n\nFigure 2: Cumulative screening calls by site"
  },
  {
    "objectID": "screening-viz.html#demographics",
    "href": "screening-viz.html#demographics",
    "title": "Screening survey: Visualizations",
    "section": "",
    "text": "Child age in months (child_age_mos) by child_sex.\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(child_age_mos), !is.na(child_sex)) |&gt;\n  ggplot() +\n  aes(child_age_mos, fill = child_sex) +\n  geom_histogram(bins = 50)\n\n\n\n\n\n\n\nFigure 3: Histogram of child age at time of recruiting call.\n\n\n\n\n\n\nSome of the code to clean the screen_df variables could be incorporated into an earlier stage of the workflow."
  },
  {
    "objectID": "screening-viz.html#language",
    "href": "screening-viz.html#language",
    "title": "Screening survey: Visualizations",
    "section": "",
    "text": "Language(s) spoken to child by child_sex.\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(\n    language_spoken_child = stringr::str_replace_all(language_spoken_child, \" \", \"_\"),\n    language_spoken_home = stringr::str_replace_all(language_spoken_home, \" \", \"_\")\n  )\n\nxtabs(formula = ~ child_sex + language_spoken_child,\n      data = df)\n\n         language_spoken_child\nchild_sex english english_other english_spanish english_spanish_other spanish\n   female     310             2              55                     2      17\n   male       292             5              59                     1      15\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + language_spoken_home, data = df)\n\n         language_spoken_home\nchild_sex english english_other english_spanish english_spanish_other other\n   female     315             4              44                     1     1\n   male       278             4              70                     2     3\n         language_spoken_home\nchild_sex spanish\n   female      17\n   male        14\n\n\n\n\n\n\nxtabs(formula = ~ language_spoken_child + language_spoken_home, data = df)\n\n                       language_spoken_home\nlanguage_spoken_child   english english_other english_spanish\n  english                   570             3              20\n  english_other               2             5               0\n  english_spanish            17             0              84\n  english_spanish_other       2             0               1\n  spanish                     2             0               9\n                       language_spoken_home\nlanguage_spoken_child   english_spanish_other other spanish\n  english                                   2     2       4\n  english_other                             0     0       0\n  english_spanish                           1     2       6\n  english_spanish_other                     0     0       0\n  spanish                                   0     0      21"
  },
  {
    "objectID": "screening-viz.html#child-health",
    "href": "screening-viz.html#child-health",
    "title": "Screening survey: Visualizations",
    "section": "",
    "text": "xtabs(formula = ~ child_sex + child_bornonduedate,\n      data = screen_df)\n\n         child_bornonduedate\nchild_sex  no yes\n   female   8 373\n   male     8 363\n\n\n\nThere are n=14 NAs.\n\n\nscreen_df |&gt;\n  dplyr::filter(is.na(child_bornonduedate)) |&gt;\n  dplyr::select(vol_id, participant_ID) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\nvol_id\nparticipant_ID\n\n\n\n\n1656\n001\n\n\n1008\n013\n\n\n1008\n013\n\n\n1008\n013\n\n\n1008\n013\n\n\n1576\n003\n\n\n1576\n006\n\n\n1481\n006\n\n\n954\n001\n\n\n1103\n001\n\n\n1596\n013\n\n\n1657\n003\n\n\n979\n026\n\n\n996\n015\n\n\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_bornonduedate + child_onterm,\n      data = screen_df)\n\n                   child_onterm\nchild_bornonduedate  no yes\n                no    1  15\n                yes   1 621\n\n\n\n\n\nMust convert pounds and ounces to decimal pounds.\n\ndf &lt;- screen_df %&gt;%\n  dplyr::mutate(.,\n                birth_weight_lbs = child_weight_pounds + child_weight_ounces/16)\n\ndf |&gt;\n  dplyr::filter(!is.na(birth_weight_lbs), !is.na(child_sex)) |&gt;\n  dplyr::filter(birth_weight_lbs &gt; 0) |&gt;\n  ggplot() +\n  aes(x = birth_weight_lbs, fill = child_sex) +\n  geom_histogram(binwidth = 0.33) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\nFigure 4\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_birth_complications,\n      data = screen_df)\n\n         child_birth_complications\nchild_sex  no yes\n   female 344  37\n   male   339  28\n\n\n\nThere are some first names in the child_birth_complications_specify field, so it is not shown here.\n\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(child_birth_complications_specify)) |&gt;\n  dplyr::select(child_age_mos, child_sex, child_birth_complications_specify) |&gt;\n  dplyr::arrange(child_age_mos) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_major_illnesses_injuries,\n      data = screen_df)\n\n         child_major_illnesses_injuries\nchild_sex  no yes\n   female 368  13\n   male   354  13\n\n\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(child_illnesses_injuries_specify),\n                !stringr::str_detect(child_illnesses_injuries_specify, \"OK\")) |&gt;\n  dplyr::select(child_age_mos, child_sex, child_illnesses_injuries_specify) |&gt;\n  dplyr::arrange(child_age_mos) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\nchild_age_mos\nchild_sex\nchild_illnesses_injuries_specify\n\n\n\n\n11.40697\nfemale\nCOVID in January, no later complications.\n\n\n11.86719\nfemale\nRSV when she 3 months; was in hospital for 2 nights\n\n\n12.68902\nfemale\nfractured wrist when she was 9 months\n\n\n12.72189\nfemale\nAt 2 months got RSV viral infection and was in hospital for 4 days. At 5 months feel off the bed and hit her head. Ended up in the emergency room but exams showed she was okay. Neither of these events resulted in any motor, perceptual, or cognitive impairment or delay as a result.\n\n\n12.73285\nmale\nHe had Covid once.\n\n\n12.76162\nfemale\nRSV when 10 weeks old, hospitalized for 1 week\n\n\n13.01775\nmale\nCovid in December but this did NOT result in a visual, auditory, motor, or cognitive disability according to mom\n\n\n13.02186\nmale\nRespiratory failure and sepsis after birth that was resolved\n\n\n16.17494\nfemale\nChild had a fall but she was fine.\n\n\n17.81860\nfemale\n**bit by tick a couple months ago, took meds to prevent Lyme disease\n\n\n17.88160\nmale\nCovid in November\n\n\n18.04597\nfemale\nbroke leg in April - all healed now. slide accident, she was 16 months. in a cast for three weeks, and then a week phantom limping.\n\n\n18.18020\nfemale\nRespiratory Syncytial Virus(RSV)\n\n\n18.67330\nmale\ntibial stress factor\n\n\n18.70617\nmale\nRSV but did not need to be admitted. This illness did not result in an impairment or disability.\n\n\n18.77055\nmale\nChild had COVID twice (fever, etc.)\n\n\n20.67856\nmale\nAnaphylactic reaction to peanuts\n\n\n22.48658\nfemale\nChild was born with a heart murmur- cardiologist said she is unaffected and will likely grow out of it. Child also had an isolated febrile seizure short after 1st birthday. Has not experienced a seizure since.\n\n\n23.01118\nmale\nHe had RSV then COVID around 13-14 months old, but they were both very mild. No complications arose from either.\n\n\n23.20979\nfemale\nfebrile seizure- around 1 1/2 years\n\n\n24.03024\nmale\nhad COVID at 7 months\n\n\n24.91782\nfemale\nShe had COVID, and when she was little had an cardiac issue (her heart was \"working\" too hard) but she was okay soon after (this was first 2-3 months after birth). March of 2021 she had fully recovered from this, and received treatment\n\n\n25.70814\nmale\nhospital day 4 for hypothermia - then negative / no diagnosis\n\n\n26.76008\nmale\nHas had a fall, was a concussion but not diagnosed with any disabilities\n\n\n32.67724\nmale\nPneumonia at 5 months\n\n\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_vision_disabilities,\n      data = screen_df)\n\n         child_vision_disabilities\nchild_sex  no yes\n   female 378   3\n   male   365   2\n\n\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(child_vision_disabilities_specify)) |&gt;\n  dplyr::select(child_age_mos, child_sex, child_vision_disabilities_specify) |&gt;\n  dplyr::arrange(child_age_mos) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\nchild_age_mos\nchild_sex\nchild_vision_disabilities_specify\n\n\n\n\n18.70617\nmale\nHe wears glasses to correct his far sighted vision. He does not have vision loss.\n\n\n18.90204\nfemale\nDuane's Syndrome in left eye\n\n\n22.35371\nfemale\nShe has a lazy eye, she wears an eye patch for part of the day.\n\n\n23.14267\nfemale\nStrabismus - wears glasses\n\n\n24.03024\nmale\nlazy eye but corrected\n\n\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_hearing_disabilities,\n      data = screen_df)\n\n         child_hearing_disabilities\nchild_sex  no yes\n   female 381   0\n   male   366   1\n\n\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(child_hearing_disabilities_specify)) |&gt;\n  dplyr::select(child_age_mos, child_sex, child_hearing_disabilities_specify) |&gt;\n  dplyr::arrange(child_age_mos) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\nchild_age_mos\nchild_sex\nchild_hearing_disabilities_specify\n\n\n\n\n32.67724\nmale\nTemporary hearing loss so tubes in his ears, one still remaining\n\n\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_developmentaldelays,\n      data = screen_df)\n\n         child_developmentaldelays\nchild_sex  no yes\n   female 315   3\n   male   307   5\n\n\n\nThere may be first names in the child_developmentaldelays_specify field, so it is not shown here.\n\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(child_developmentaldelays_specify)) |&gt;\n  dplyr::select(child_age_mos, child_sex, child_developmentaldelays_specify) |&gt;\n  dplyr::arrange(child_age_mos) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\n\nThis is work yet-to-be-done. The time stamps need to be reformatted prior to visualization.\n\n\n\n\nextract_sleep_hr &lt;- function(t) {\n  t |&gt;\n    stringr::str_extract(\"^[0-9]{2}\\\\:[0-9]{2}\\\\:[0-9]{2}\") |&gt;\n    hms::as_hms()\n}\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(child_sleep_time = extract_sleep_hr(child_sleep_time)) |&gt;\n  dplyr::filter(!is.na(child_sleep_time)) \n\ndf |&gt;\n  dplyr::filter(!is.na(child_sleep_time),\n                !is.na(child_sex)) |&gt;\n  ggplot() +\n  aes(child_sleep_time, fill = child_sex) +\n  geom_histogram(bins = 18) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\nFigure 5\n\n\n\n\n\nSome of the bed times are probably not in correct 24 hr time.\n\ndf |&gt;\n  dplyr::filter(child_sleep_time &lt; hms::as_hms(\"16:00:00\")) |&gt;\n  dplyr::select(site_id, participant_ID, child_sleep_time) |&gt;\n  dplyr::arrange(site_id, participant_ID) |&gt;\n  knitr::kable('html')\n\n\n\n\nsite_id\nparticipant_ID\nchild_sleep_time\n\n\n\n\nCSUFL\n013\n07:00:00\n\n\nCSULB\n006\n07:30:00\n\n\nINDNA\n004\n09:00:00\n\n\nINDNA\n006\n07:45:00\n\n\nNYUNI\n082\n07:00:00\n\n\nOHIOS\n002\n10:00:00\n\n\nPRINU\n001\n12:15:00\n\n\nPRINU\n018\n07:30:00\n\n\nPRINU\n027\n07:30:00\n\n\nPRINU\n043\n08:15:00\n\n\nPURDU\n020\n08:30:00\n\n\nPURDU\n021\n11:30:00\n\n\nUCSCR\n011\n07:30:00\n\n\nUGEOR\n016\n07:30:00\n\n\nUPITT\n013\n08:15:00\n\n\nUPITT\n016\n00:30:00\n\n\nUTAUS\n023\n08:00:00\n\n\n\n\n\n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(child_wake_time = extract_sleep_hr(child_wake_time)) |&gt;\n  dplyr::filter(!is.na(child_wake_time)) \n\ndf |&gt;\n  dplyr::filter(!is.na(child_wake_time),\n                !is.na(child_sex)) |&gt;\n  ggplot() +\n  aes(child_wake_time, fill = child_sex) +\n  geom_histogram(bins = 18) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\nFigure 6\n\n\n\n\n\nThere are some unusual wake times, too.\n\ndf |&gt;\n  dplyr::filter(child_wake_time &gt; hms::as_hms(\"16:00:00\")) |&gt;\n  dplyr::select(site_id, participant_ID, child_wake_time) |&gt;\n  dplyr::arrange(site_id, participant_ID) |&gt;\n  knitr::kable('html')\n\n\n\n\nsite_id\nparticipant_ID\nchild_wake_time\n\n\n\n\nBOSTU\n001\n19:30:00\n\n\nCHOPH\n017\n19:30:00\n\n\nGEORG\n026\n19:00:00\n\n\nOHIOS\n009\n18:30:00\n\n\nOHIOS\n012\n19:30:00\n\n\nOHIOS\n014\n18:30:00\n\n\nOHIOS\n018\n18:45:00\n\n\nOHIOS\n019\n19:30:00\n\n\nOHIOS\n021\n19:30:00\n\n\nOHIOS\n029\n19:30:00\n\n\nOHIOS\n031\n19:30:00\n\n\nOHIOS\n035\n19:00:00\n\n\nOHIOS\n062\n18:30:00\n\n\nPRINU\n015\n19:00:00\n\n\nPRINU\n018\n19:45:00\n\n\nPRINU\n027\n20:00:00\n\n\nPRINU\n043\n19:00:00\n\n\nPURDU\n020\n21:30:00\n\n\nPURDU\n021\n23:30:00\n\n\nPURDU\n023\n23:00:00\n\n\nUALAB\n009\n18:00:00\n\n\nUCRIV\n007\n18:00:00\n\n\nUCSCR\n035\n18:30:00\n\n\nUGEOR\n002\n19:30:00\n\n\nUHOUS\n014\n19:00:00\n\n\nUMIAM\n013\n20:00:00\n\n\nUMIAM\n029\n19:30:00\n\n\nUTAUS\n013\n18:00:00\n\n\nUTAUS\n020\n18:30:00\n\n\nUTAUS\n040\n19:00:00\n\n\nUTAUS\n043\n19:15:00\n\n\nVBLTU\n025\n19:15:00\n\n\n\n\n\n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(child_sleep_time = extract_sleep_hr(child_sleep_time),\n                  child_wake_time = extract_sleep_hr(child_wake_time)) |&gt;\n  dplyr::filter(!is.na(child_sleep_time),\n                !is.na(child_wake_time)) |&gt;\n  dplyr::mutate(child_sleep_secs = (child_sleep_time - child_wake_time))\n\ndf |&gt;\n  dplyr::filter(!is.na(child_sleep_secs)) |&gt;\n  ggplot() +\n  aes(child_sleep_secs, fill = child_sex) +\n  geom_histogram(bins = 18) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\nDon't know how to automatically pick scale for object of type &lt;difftime&gt;.\nDefaulting to continuous.\n\n\n\n\n\n\n\n\nFigure 7\n\n\n\n\n\nAgain, there are some unusual values.\n\ndf |&gt;\n  dplyr::filter(child_sleep_secs &lt; 12000) |&gt;\n  dplyr::select(site_id, participant_ID, child_sleep_time, child_wake_time, child_sleep_secs) |&gt;\n  dplyr::arrange(site_id, participant_ID) |&gt;\n  knitr::kable('html')\n\n\n\n\nsite_id\nparticipant_ID\nchild_sleep_time\nchild_wake_time\nchild_sleep_secs\n\n\n\n\nBOSTU\n001\n19:30:00\n19:30:00\n0 secs\n\n\nCHOPH\n017\n20:45:00\n19:30:00\n4500 secs\n\n\nCSUFL\n013\n07:00:00\n06:00:00\n3600 secs\n\n\nCSULB\n006\n07:30:00\n07:30:00\n0 secs\n\n\nGEORG\n026\n19:45:00\n19:00:00\n2700 secs\n\n\nINDNA\n004\n09:00:00\n08:00:00\n3600 secs\n\n\nINDNA\n006\n07:45:00\n06:30:00\n4500 secs\n\n\nNYUNI\n082\n07:00:00\n06:15:00\n2700 secs\n\n\nOHIOS\n002\n10:00:00\n08:00:00\n7200 secs\n\n\nOHIOS\n009\n18:30:00\n18:30:00\n0 secs\n\n\nOHIOS\n012\n20:00:00\n19:30:00\n1800 secs\n\n\nOHIOS\n014\n20:00:00\n18:30:00\n5400 secs\n\n\nOHIOS\n018\n20:00:00\n18:45:00\n4500 secs\n\n\nOHIOS\n019\n20:30:00\n19:30:00\n3600 secs\n\n\nOHIOS\n021\n20:00:00\n19:30:00\n1800 secs\n\n\nOHIOS\n029\n20:45:00\n19:30:00\n4500 secs\n\n\nOHIOS\n031\n20:30:00\n19:30:00\n3600 secs\n\n\nOHIOS\n035\n20:30:00\n19:00:00\n5400 secs\n\n\nOHIOS\n062\n20:30:00\n18:30:00\n7200 secs\n\n\nPRINU\n015\n19:00:00\n19:00:00\n0 secs\n\n\nPRINU\n018\n07:30:00\n19:45:00\n-44100 secs\n\n\nPRINU\n027\n07:30:00\n20:00:00\n-45000 secs\n\n\nPRINU\n043\n08:15:00\n19:00:00\n-38700 secs\n\n\nPURDU\n020\n08:30:00\n21:30:00\n-46800 secs\n\n\nPURDU\n021\n11:30:00\n23:30:00\n-43200 secs\n\n\nPURDU\n023\n22:30:00\n23:00:00\n-1800 secs\n\n\nUALAB\n009\n19:30:00\n18:00:00\n5400 secs\n\n\nUCRIV\n007\n21:00:00\n18:00:00\n10800 secs\n\n\nUCSCR\n011\n07:30:00\n06:30:00\n3600 secs\n\n\nUCSCR\n035\n20:45:00\n18:30:00\n8100 secs\n\n\nUGEOR\n002\n20:00:00\n19:30:00\n1800 secs\n\n\nUGEOR\n016\n07:30:00\n08:00:00\n-1800 secs\n\n\nUHOUS\n014\n19:00:00\n19:00:00\n0 secs\n\n\nUMIAM\n013\n21:00:00\n20:00:00\n3600 secs\n\n\nUMIAM\n029\n20:00:00\n19:30:00\n1800 secs\n\n\nUPITT\n013\n08:15:00\n07:15:00\n3600 secs\n\n\nUPITT\n016\n00:30:00\n11:00:00\n-37800 secs\n\n\nUTAUS\n013\n19:30:00\n18:00:00\n5400 secs\n\n\nUTAUS\n020\n20:00:00\n18:30:00\n5400 secs\n\n\nUTAUS\n023\n08:00:00\n07:00:00\n3600 secs\n\n\nUTAUS\n040\n19:00:00\n19:00:00\n0 secs\n\n\nUTAUS\n043\n22:00:00\n19:15:00\n9900 secs\n\n\nVBLTU\n025\n19:30:00\n19:15:00\n900 secs\n\n\n\n\n\n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(child_nap_hours = as.numeric(child_nap_hours)) |&gt;\n  dplyr::filter(!is.na(child_sleep_time)) \n\nWarning: There was 1 warning in `dplyr::mutate()`.\nℹ In argument: `child_nap_hours = as.numeric(child_nap_hours)`.\nCaused by warning:\n! NAs introduced by coercion\n\ndf |&gt;\n  dplyr::filter(!is.na(child_nap_hours),\n                !is.na(child_sex)) |&gt;\n  ggplot() +\n  aes(child_nap_hours, fill = child_sex) +\n  geom_histogram(bins = 18) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\nFigure 8\n\n\n\n\n\nAnd there are some very long nappers or null values we need to capture.\n\ndf |&gt;\n  dplyr::filter(child_nap_hours &gt; 5) |&gt;\n  dplyr::select(site_id, participant_ID, child_nap_hours) |&gt;\n  dplyr::arrange(site_id, participant_ID) |&gt;\n  knitr::kable('html')\n\n\n\n\nsite_id\nparticipant_ID\nchild_nap_hours\n\n\n\n\nUMIAM\n003\n8\n\n\nUOREG\n012\n6\n\n\nUTAUS\n009\n6\n\n\n\n\n\n\n\n\n\n\n\nxtabs(formula = ~ child_sex + child_sleep_location,\n      data = screen_df)"
  },
  {
    "objectID": "screening-viz.html#mother",
    "href": "screening-viz.html#mother",
    "title": "Screening survey: Visualizations",
    "section": "",
    "text": "xtabs(formula = ~ child_sex + mom_bio,\n      data = screen_df)\n\n         mom_bio\nchild_sex no_adoptive no_partnerchild yes\n   female           2               1 364\n   male             0               0 362\n\n\n\n\n\n\nscreen_df |&gt;\n  dplyr::filter(!is.na(mom_childbirth_age), !is.na(child_sex)) |&gt;\n  ggplot() +\n  aes(x = mom_childbirth_age, fill = child_sex) +\n  geom_histogram(bins = 25) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\nFigure 9\n\n\n\n\n\nClearly, there are some impossible (erroneous) maternal ages &gt; 100. Here are details:\n\nold_moms &lt;- screen_df |&gt;\n  dplyr::filter(mom_childbirth_age &gt; 55)\n\nold_moms |&gt;\n  dplyr::select(submit_date, vol_id, participant_ID, mom_childbirth_age) |&gt;\n  knitr::kable(format = 'html')\n\n\n\n\nsubmit_date\nvol_id\nparticipant_ID\nmom_childbirth_age\n\n\n\n\n2022-07-07 15:03:20\n1391\n005\n121.22\n\n\n\n\n\n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(mom_race)) |&gt;\n  dplyr::mutate(mom_race = dplyr::recode(\n    mom_race,\n    morethanone = \"more_than_one\",\n    americanindian = \"american_indian\"))\n\nxtabs(~mom_race, df)\n\nmom_race\namerican_indian           asian           black   more_than_one           other \n              3              25              34              42              45 \n        refused           white \n              2             591 \n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(mom_birth_country = dplyr::recode(\n    mom_birth_country, \n    unitedstates = \"US\",\n    united_states = \"US\",\n    othercountry = \"Other\",\n    other_country = \"Other\",\n    refused = \"Refused\"\n  ))\n\nxtabs(~ mom_birth_country, data = df)\n\nmom_birth_country\n     Other puertorico         US \n        86          3        653 \n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::mutate(mom_birth_country_specify = stringr::str_to_title(mom_birth_country_specify)) |&gt;\n  dplyr::filter(!is.na(mom_birth_country_specify)) |&gt;\n  dplyr::select(child_sex, mom_birth_country_specify)\n\nunique(df$mom_birth_country_specify)\n\n [1] \"South Korea\"        \"Argentina\"          \"Spain\"             \n [4] \"Zimbabwe\"           \"Mexico\"             \"Canada\"            \n [7] \"Bolivia\"            \"Uk\"                 \"Refused\"           \n[10] \"United Kingdom\"     \"Liberia\"            \"Pakistan\"          \n[13] \"Australia\"          \"Venezuela\"          \"India\"             \n[16] \"Kenya\"              \"England\"            \"China\"             \n[19] \"Ireland\"            \"El Salvador\"        \"Colombia\"          \n[22] \"Chile\"              \"Haiti\"              \"Guatemala\"         \n[25] \"Ecuador\"            \"Costa Rica\"         \"Italy\"             \n[28] \"Malaysia\"           \"Phillipines\"        \"Dominican Republic\"\n[31] \"Nigeria\"            \"Honduras\"           \"Colomobia\"         \n[34] \"Columbia\"           \"Peru\"               \"Panama\"            \n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(mom_education)) |&gt;\n  dplyr::select(child_sex, mom_education)\n\nxtabs(~ mom_education, data = df)\n\nmom_education\n       associates    bachelor_s_deg         bachelors           diploma \n               25                 3               239                26 \n        doctorate          eleventh               ged graduate_nodegree \n               94                 1                 3                22 \n   master_s_degre           masters             ninth      professional \n                2               245                 1                35 \n   professional_d       somecollege       voc_diplima     voc_nodiplima \n                2                40                 2                 1 \n\n\n\nThis requires some recoding work.\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(mom_employment))\n\nxtabs(~ mom_employment, data = df)\n\nmom_employment\nfull_time        no part_time \n      428       165       148 \n\n\n\n\n\nThis information is available, but would need to be substantially recoded to be useful in summary form.\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(mom_jobs_number))\n\nxtabs(~ mom_jobs_number, data = df)\n\nmom_jobs_number\n    0     1     2     3     4 5more \n    1   512    59     1     1     1 \n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(mom_jobs_number),\n                !is.na(mom_employment))\n\nxtabs(~ mom_jobs_number + mom_employment, data = df)\n\n               mom_employment\nmom_jobs_number full_time part_time\n          0             0         1\n          1           391       121\n          2            34        25\n          3             1         0\n          4             1         0\n          5more         1         0\n\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(mom_training))\n\nxtabs(~ mom_training, data = df)\n\nmom_training\n no yes \n722  17"
  },
  {
    "objectID": "screening-viz.html#biological-father",
    "href": "screening-viz.html#biological-father",
    "title": "Screening survey: Visualizations",
    "section": "",
    "text": "df &lt;- screen_df |&gt;\n  dplyr::select(biodad_childbirth_age, biodad_race, child_sex) |&gt;\n  dplyr::mutate(\n    biodad_race =\n      dplyr::recode(\n        biodad_race,\n        americanindian_NA = \"american_indian\",\n        asian_NA = \"asian\",\n        NA_asian = \"asian\",\n        black_NA = \"black\",\n        donotknow_NA = \"do_not_know\",\n        NA_NA = \"NA\",\n        NA_white = \"white\",\n        other_NA = \"other\",\n        refused_NA = \"refused\",\n        white_NA = \"white\",\n        morethanone_NA = \"more_than_one\"\n      )\n  ) |&gt;\n  dplyr::mutate(biodad_childbirth_age = stringr::str_remove_all(biodad_childbirth_age, \"[_NA]\")) |&gt;\n  # dplyr::filter(!is.na(biodad_childbirth_age), !is.na(biodad_race)) |&gt;\n  dplyr::mutate(biodad_childbirth_age = as.numeric(biodad_childbirth_age))\n\nWarning: There was 1 warning in `dplyr::mutate()`.\nℹ In argument: `biodad_childbirth_age = as.numeric(biodad_childbirth_age)`.\nCaused by warning:\n! NAs introduced by coercion\n\nxtabs(~ biodad_race, df)\n\nbiodad_race\n  american_indian             asian             black       do_not_know \n                4                26                42                 4 \n    more_than_one                NA nativehawaiian_NA             other \n               31                31                 1                62 \n          refused             white \n                3               556 \n\n\n\n\n\n\ndf |&gt;\n  dplyr::filter(!is.na(biodad_childbirth_age)) |&gt;\n  ggplot() +\n  aes(x = biodad_childbirth_age, fill = child_sex) +\n  geom_histogram(bins = 25) +\n  theme(legend.position = \"bottom\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\nFigure 10"
  },
  {
    "objectID": "screening-viz.html#childcare",
    "href": "screening-viz.html#childcare",
    "title": "Screening survey: Visualizations",
    "section": "",
    "text": "df &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(childcare_types))\n                \nxtabs(~ childcare_types, data = df)\n\nchildcare_types\n                        childcare                    childcare_cent \n                              208                                 2 \n                            nanny                    nanny_babysitt \n                                4                                 1 \n                       nanny_home              nanny_home childcare \n                               35                                12 \n         nanny_home nanny_nothome nanny_home nanny_nothome relative \n                                2                                 1 \n              nanny_home relative                     nanny_nothome \n                                6                                14 \n          nanny_nothome childcare            nanny_nothome relative \n                                3                                 1 \n                             none                          relative \n                              159                                87 \n               relative childcare \n                               19 \n\n\n\nThis requires some cleaning.\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(childcare_hours)) |&gt;\n  dplyr::arrange(childcare_hours)\n\nunique(df$childcare_hours)\n\n [1] \"1\"                                           \n [2] \"10\"                                          \n [3] \"12\"                                          \n [4] \"13\"                                          \n [5] \"14\"                                          \n [6] \"14.5\"                                        \n [7] \"15\"                                          \n [8] \"15-20\"                                       \n [9] \"16\"                                          \n[10] \"16-20\"                                       \n[11] \"17\"                                          \n[12] \"17.5\"                                        \n[13] \"18\"                                          \n[14] \"19\"                                          \n[15] \"2\"                                           \n[16] \"2-3\"                                         \n[17] \"2-4\"                                         \n[18] \"20\"                                          \n[19] \"20 hours\"                                    \n[20] \"20 hours a week - maternal grandmother\"      \n[21] \"21\"                                          \n[22] \"21 (14 hr childcare center, 7 hr babysitter)\"\n[23] \"22\"                                          \n[24] \"24\"                                          \n[25] \"25\"                                          \n[26] \"25, 15 of those hours are at daycare\"        \n[27] \"26\"                                          \n[28] \"27\"                                          \n[29] \"28\"                                          \n[30] \"3\"                                           \n[31] \"30\"                                          \n[32] \"30-35\"                                       \n[33] \"30-40\"                                       \n[34] \"31\"                                          \n[35] \"32\"                                          \n[36] \"33\"                                          \n[37] \"34\"                                          \n[38] \"35\"                                          \n[39] \"35-40\"                                       \n[40] \"36\"                                          \n[41] \"36; Grandpa watches one day a week\"          \n[42] \"37\"                                          \n[43] \"38\"                                          \n[44] \"4\"                                           \n[45] \"40\"                                          \n[46] \"40+\"                                         \n[47] \"40-45\"                                       \n[48] \"40-45 hours\"                                 \n[49] \"40-50\"                                       \n[50] \"42\"                                          \n[51] \"42.5\"                                        \n[52] \"43\"                                          \n[53] \"45\"                                          \n[54] \"45-50\"                                       \n[55] \"47\"                                          \n[56] \"5\"                                           \n[57] \"50\"                                          \n[58] \"52.5\"                                        \n[59] \"53\"                                          \n[60] \"6\"                                           \n[61] \"63\"                                          \n[62] \"7\"                                           \n[63] \"8\"                                           \n[64] \"8-16\"                                        \n[65] \"8-5 each day\"                                \n[66] \"80\"                                          \n[67] \"9\"                                           \n\n\n\nThis requires some cleaning.\n\n\n\n\n\ndf &lt;- screen_df |&gt;\n  dplyr::filter(!is.na(childcare_language))\n\nunique(df$childcare_language)\n\n [1] \"Spanish and English (half and half)\"                                       \n [2] \"English\"                                                                   \n [3] \"Spanish\"                                                                   \n [4] \"English and Spanish (50/50)\"                                               \n [5] \"english\"                                                                   \n [6] \"English when speaking with children, but Arabic when speaking to eachother\"\n [7] \"Mostly English, some Spanish\"                                              \n [8] \"Mandarin\"                                                                  \n [9] \"Spanish at the center\"                                                     \n[10] \"English and Spanish\"                                                       \n[11] \"English, Spanish\"                                                          \n[12] \"Usually English, sometimes arabic and french\"                              \n[13] \"English and speaks a little bit of Japanese but not directly to Lucas\"     \n[14] \"English and Creole\"                                                        \n[15] \"Spanish (sometimes English)\"                                               \n[16] \"English;Spanish\"                                                           \n[17] \"Spanish and English\"                                                       \n[18] \"spanish\"                                                                   \n[19] \"French only\"                                                               \n[20] \"English and some sign language\"                                            \n[21] \"Engish\"                                                                    \n[22] \"English, American Sign Language\"                                           \n[23] \"English and ASL\"                                                           \n[24] \"Ingles\"                                                                    \n[25] \"English/Spanish\"                                                           \n[26] \"English and some Spanish\"                                                  \n[27] \"english, has been exposed to Arabic\"                                       \n[28] \"Nanny in Spanish at home. At school both English and Spanish.\"             \n[29] \"English (majority of the time) and sometimes Spanish\"                      \n[30] \"English and Spanish 50/50\"                                                 \n[31] \"english, some spanish\"                                                     \n[32] \"English, Italian, Spanish\"                                                 \n[33] \"English, sometimes a little bit of Spanish\"                                \n[34] \"English &  Spanish\"                                                        \n[35] \"English and Portuguese\"                                                    \n\n\n\nThis requires some cleaning."
  }
]